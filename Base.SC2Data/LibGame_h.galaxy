include "LibCore_h"

//--------------------------------------------------------------------------------------------------
// Library: Game
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libGame_ge_SpawnMinionsMinionTypeNumber_NoValue = 0;
const int libGame_ge_SpawnMinionsMinionTypeNumber_Melee = 1;
const int libGame_ge_SpawnMinionsMinionTypeNumber_Wizard = 2;
const int libGame_ge_SpawnMinionsMinionTypeNumber_Ranged = 3;
const int libGame_ge_SpawnMinionsMinionTypeNumber_Catapult = 4;
const int libGame_ge_CustomValueIndexes_MinionIndex = 0;
const int libGame_ge_CustomValueIndexes_MercIndex = 1;
const int libGame_ge_CustomValueIndexes_MercGroupIndex = 2;
const int libGame_ge_CustomValueIndexes_TowerIndex = 3;
const int libGame_ge_CustomValueIndexes_DefenderIndex = 4;
const int libGame_ge_CustomValueIndexes_DefenderGroupIndex = 5;
const int libGame_ge_CustomValueIndexes_MapMUnitIndex = 6;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorKineticCreep = 7;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorKineticHero = 8;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorKineticMercenary = 9;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorKineticMinion = 10;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorKineticStructure = 11;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorKineticSummon = 12;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorEnergeticCreep = 13;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorEnergeticHero = 14;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorEnergeticMercenary = 15;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorEnergeticMinion = 16;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorEnergeticStructure = 17;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorEnergeticSummon = 18;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorStormCreep = 19;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorStormHero = 20;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorStormMercenary = 21;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorStormMinion = 22;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorStormStructure = 23;
const int libGame_ge_CustomValueIndexes_UnitStatsArmorStormSummon = 24;
const int libGame_ge_CustomValueIndexes_UnitStatsPowerKinetic = 25;
const int libGame_ge_CustomValueIndexes_UnitStatsPowerEnergetic = 26;
const int libGame_ge_CustomValueIndexes_UnitStatsPowerStorm = 27;
const int libGame_ge_CustomValueIndexes_UnitStatsPowerToSummonedKinetic = 28;
const int libGame_ge_CustomValueIndexes_UnitStatsPowerToSummonedEnergetic = 29;
const int libGame_ge_CustomValueIndexes_UnitStatsPowerToSummonedStorm = 30;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingCreatedEffects = 31;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingCreatedVampiricKinetic = 32;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingCreatedVampiricEnergetic = 33;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingCreatedVampiricStorm = 34;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingTaken = 35;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingIngameUsedCreatedEffects = 36;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingIngameUsedCreatedVampiricKinetic = 37;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingIngameUsedCreatedVampiricEnergetic = 38;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingIngameUsedCreatedVampiricStorm = 39;
const int libGame_ge_CustomValueIndexes_UnitStatsHealingIngameUsedTaken = 40;
const int libGame_ge_PositiveNegative_Negative = 0;
const int libGame_ge_PositiveNegative_Positive = 1;
const int libGame_ge_UnitStatsArmorBehaviorType_ArmorKinetic = 0;
const int libGame_ge_UnitStatsArmorBehaviorType_ArmorEnergetic = 1;
const int libGame_ge_UnitStatsArmorBehaviorType_ArmorStorm = 2;
const int libGame_ge_UnitStatsArmorUnitType_Hero = 0;
const int libGame_ge_UnitStatsArmorUnitType_Creep = 1;
const int libGame_ge_UnitStatsArmorUnitType_Mercenary = 2;
const int libGame_ge_UnitStatsArmorUnitType_Minion = 3;
const int libGame_ge_UnitStatsArmorUnitType_Structure = 4;
const int libGame_ge_UnitStatsArmorUnitType_Summon = 5;
const int libGame_ge_UnitStatsPowerType_PowerKinetic = 0;
const int libGame_ge_UnitStatsPowerType_PowerEnergetic = 1;
const int libGame_ge_UnitStatsPowerType_PowerStorm = 2;
const int libGame_ge_UnitStatsHealingType_HealingCreatedEffects = 0;
const int libGame_ge_UnitStatsHealingType_HealingCreatedVampiricEnergetic = 1;
const int libGame_ge_UnitStatsHealingType_HealingCreatedVampiricKinetic = 2;
const int libGame_ge_UnitStatsHealingType_HealingCreatedVampiricStorm = 3;
const int libGame_ge_UnitStatsHealingType_HealingTaken = 4;
const int libGame_ge_UnitStatsVampiricHealingType_HealingCreatedVampiricEnergetic = 0;
const int libGame_ge_UnitStatsVampiricHealingType_HealingCreatedVampiricKinetic = 1;
const int libGame_ge_UnitStatsVampiricHealingType_HealingCreatedVampiricStorm = 2;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorAll = 0;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorAllEnergetic = 1;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorAllKinetic = 2;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorAllStorm = 3;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorEnergeticCreep = 4;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorEnergeticHero = 5;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorEnergeticMercenary = 6;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorEnergeticMinion = 7;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorEnergeticStructure = 8;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorEnergeticSummon = 9;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorKineticCreep = 10;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorKineticHero = 11;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorKineticMercenary = 12;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorKineticMinion = 13;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorKineticStructure = 14;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorKineticSummon = 15;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorStormCreep = 16;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorStormHero = 17;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorStormMercenary = 18;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorStormMinion = 19;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorStormStructure = 20;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsArmorStormSummon = 21;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerAll = 22;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerEnergetic = 23;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerKinetic = 24;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerStorm = 25;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerToSummonedAll = 26;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerToSummonedEnergetic = 27;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerToSummonedKinetic = 28;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsPowerToSummonedStorm = 29;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsHealingAll = 30;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsHealingCreatedAll = 31;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsHealingCreatedEffects = 32;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsHealingCreatedVampiricEnergetic = 33;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsHealingCreatedVampiricKinetic = 34;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsHealingCreatedVampiricStorm = 35;
const int libGame_ge_UnitStatsBehaviorStatsIndexes_UnitBehaviorStatsHealingTaken = 36;
const int libGame_ge_AnnAnnouncementType_Nothing = 0;
const int libGame_ge_AnnAnnouncementType_HeroDiesally = 1;
const int libGame_ge_AnnAnnouncementType_HeroDiesenemy = 2;
const int libGame_ge_AnnAnnouncementType_HeroDiesyou = 3;
const int libGame_ge_AnnAnnouncementType_HeroDiesKillingSpree = 4;
const int libGame_ge_AnnAnnouncementType_TeamWipe = 5;
const int libGame_ge_AnnAnnouncementType_CampGatheredAlly = 6;
const int libGame_ge_AnnAnnouncementType_CampGatheredEnemy = 7;
const int libGame_ge_AnnAnnouncementType_TributeSpawningSoon = 8;
const int libGame_ge_AnnAnnouncementType_TributeSpawned = 9;
const int libGame_ge_AnnAnnouncementType_TributeObtained = 10;
const int libGame_ge_AnnAnnouncementType_TributeTeamIsCursed = 11;
const int libGame_ge_AnnAnnouncementType_TributeCurseHasBeenLifted = 12;
const int libGame_ge_AnnAnnouncementType_TowerDestroyedAlly = 13;
const int libGame_ge_AnnAnnouncementType_TowerDestroyedEnemy = 14;
const int libGame_ge_AnnAnnouncementType_KeepDestroyedAlly = 15;
const int libGame_ge_AnnAnnouncementType_KeepDestroyedEnemy = 16;
const int libGame_ge_AnnAnnouncementType_CoreIsUnderAttack = 17;
const int libGame_ge_AnnAnnouncementType_BattleBegins30sec = 18;
const int libGame_ge_AnnAnnouncementType_BattleIntro = 19;
const int libGame_ge_AnnAnnouncementType_GameOver = 20;
const int libGame_ge_AnnAnnouncementType_EventStarts = 21;
const int libGame_ge_AnnAnnouncementType_EventContinous = 22;
const int libGame_ge_AnnAnnouncementType_EvendEnds = 23;
const int libGame_ge_EncouragementDeathTipsNames_Null = 0;
const int libGame_ge_EncouragementDeathTipsNames_Gangups = 1;
const int libGame_ge_EncouragementDeathTipsNames_FollowMinions = 2;
const int libGame_ge_EncouragementDeathTipsNames_MinionsvsTowns = 3;
const int libGame_ge_EncouragementDeathTipsNames_UseYourAbilities = 4;
const int libGame_ge_EncouragementDeathTipsNames_Moonwell = 5;
const int libGame_ge_EncouragementDeathTipsNames_Retreat = 6;
const int libGame_ge_EncouragementDeathTipsNames_TrainTalents = 7;
const int libGame_ge_EncouragementDeathTipsNames_Mount = 8;
const int libGame_ge_EncouragementDeathTipsNames_EnemyFountainDeath = 9;
const int libGame_ge_EncouragementDeathTipsNames_Count = 10;
string libGame_ge_EncouragementDeathTipsNames_Ident (int lp_val);
const int libGame_ge_PlayerFaction_Nothing = 0;
const int libGame_ge_PlayerFaction_Order = 1;
const int libGame_ge_PlayerFaction_Chaos = 2;
const int libGame_ge_HeroSpecificScoreValues_Null = 0;
const int libGame_ge_HeroSpecificScoreValues_AbathurStabHits = 1;
const int libGame_ge_HeroSpecificScoreValues_AbathurToxicNestHits = 2;
const int libGame_ge_HeroSpecificScoreValues_ArthasFrostStrikeHits = 3;
const int libGame_ge_HeroSpecificScoreValues_ArthasHowlingBlastHits = 4;
const int libGame_ge_HeroSpecificScoreValues_DiabloOverpowerHeroHit = 5;
const int libGame_ge_HeroSpecificScoreValues_DiabloShadowChargeStuns = 6;
const int libGame_ge_HeroSpecificScoreValues_ETCPowerSlideHits = 7;
const int libGame_ge_HeroSpecificScoreValues_ETCGuitarSoloHeals = 8;
const int libGame_ge_HeroSpecificScoreValues_FalstadHammerangHits = 9;
const int libGame_ge_HeroSpecificScoreValues_FalstadThunderstormDamage = 10;
const int libGame_ge_HeroSpecificScoreValues_GazloweEnemyStructureDamage = 11;
const int libGame_ge_HeroSpecificScoreValues_GazloweDethLazorDamage = 12;
const int libGame_ge_HeroSpecificScoreValues_IllidanBetrayersStrikeHits = 13;
const int libGame_ge_HeroSpecificScoreValues_IllidanCrescentSweepHeroKill = 14;
const int libGame_ge_HeroSpecificScoreValues_KerriganImpalingBladesHits = 15;
const int libGame_ge_HeroSpecificScoreValues_KerriganRavageHits = 16;
const int libGame_ge_HeroSpecificScoreValues_MalfurionHeals = 17;
const int libGame_ge_HeroSpecificScoreValues_MalfurionEntanglingRootsHits = 18;
const int libGame_ge_HeroSpecificScoreValues_MuradinStormhammerHits = 19;
const int libGame_ge_HeroSpecificScoreValues_MuradinThunderclapHits = 20;
const int libGame_ge_HeroSpecificScoreValues_NazibaStructureDamage = 21;
const int libGame_ge_HeroSpecificScoreValues_NazibaPlagueToadsDamage = 22;
const int libGame_ge_HeroSpecificScoreValues_NovaHoloDecoyDamageAbsorbed = 23;
const int libGame_ge_HeroSpecificScoreValues_NovaSnipeHits = 24;
const int libGame_ge_HeroSpecificScoreValues_RaynorPenetratingRoundHits = 25;
const int libGame_ge_HeroSpecificScoreValues_RaynorInspireHits = 26;
const int libGame_ge_HeroSpecificScoreValues_SgtHammer100CaliberBlastHits = 27;
const int libGame_ge_HeroSpecificScoreValues_SgtHammerStructureDamage = 28;
const int libGame_ge_HeroSpecificScoreValues_SonyaAncientSpearHits = 29;
const int libGame_ge_HeroSpecificScoreValues_SonyaWhirlwindDamage = 30;
const int libGame_ge_HeroSpecificScoreValues_StitchesHookHits = 31;
const int libGame_ge_HeroSpecificScoreValues_StitchesDevourHeals = 32;
const int libGame_ge_HeroSpecificScoreValues_TassadarProtectiveShieldHits = 33;
const int libGame_ge_HeroSpecificScoreValues_TassadarTimeWarpDamage = 34;
const int libGame_ge_HeroSpecificScoreValues_TychusFragGrenadeHits = 35;
const int libGame_ge_HeroSpecificScoreValues_TychusOverkillDamage = 36;
const int libGame_ge_HeroSpecificScoreValues_TyraelPunishingBladeHits = 37;
const int libGame_ge_HeroSpecificScoreValues_TyraelHandOfSacrificeDamageAbsorbed = 38;
const int libGame_ge_HeroSpecificScoreValues_TyrandeHeals = 39;
const int libGame_ge_HeroSpecificScoreValues_TyrandeSentinalHits = 40;
const int libGame_ge_HeroSpecificScoreValues_UtherHeals = 41;
const int libGame_ge_HeroSpecificScoreValues_UtherHammerOfJusticeHits = 42;
const int libGame_ge_HeroSpecificScoreValues_VallaHungeringArrowHits = 43;
const int libGame_ge_HeroSpecificScoreValues_VallaMultishotDamage = 44;
const int libGame_ge_HeroSpecificScoreValues_ZeratulCleaveHits = 45;
const int libGame_ge_HeroSpecificScoreValues_ZeratulSustainedAnomalyHits = 46;
const int libGame_ge_HeroSpecificScoreValues_Count = 47;

// Constants
const fixed libGame_gv_minionSpawnTime = 30.0;
const int libGame_gv_teamOrderIndex_C = 1;
const int libGame_gv_teamChaosIndex_C = 2;
const int libGame_gv_positiveNegativeConstant = 1;
const int libGame_gv_unitStatsArmorTypes = 2;
const int libGame_gv_unitStatsArmorUnitTypes = 5;
const int libGame_gv_unitStatsDoubledArmorValue = 150;
const int libGame_gv_unitStatsMaximumArmor = 75;
const int libGame_gv_unitStatsMinimumArmor = -75;
const int libGame_gv_unitStatsPowerMaxValuePositive = 200;
const int libGame_gv_unitStatsPowerMaxValueNegative = 100;
const int libGame_gv_unitStatsPowerAllValues = 300;
const int libGame_gv_unitStatsPowerTypes = 2;
const int libGame_gv_unitStatsHealingTypes = 4;
const int libGame_gv_unitStatsHealingMaxValuePositive = 200;
const int libGame_gv_unitStatsHealingMaxValueNegative = 100;
const int libGame_gv_unitStatsHealingAllValues = 300;
const int libGame_gv_unitStatsAttributesValueConstant = 36;
const int libGame_gv_cameraBound_MaxCount_C = 10;
const int libGame_gv_announcement_QueueMaxCount_C = 32;
const fixed libGame_gv_announcement_StandardTimerDuration_C = 2.0;
const fixed libGame_gv_announcement_QuickSoundOnlyTimerDuration_C = 1.625;
const fixed libGame_gv_announcement_KillAnnouncementDuration_C = 4.0;
const fixed libGame_gv_announcement_NoDelay_C = 0.0625;
const fixed libGame_gv_announcement_KillAnnouncementTimerTreshold_C = 0.25;
const fixed libGame_gv_announcement_HeroTakedownVODelay_C = 2.0;
const int libGame_gv_announcement_MinimumLevelForTeamKillHeroVO_C = 8;
const int libGame_gv_annCountMax = 20;
const int libGame_gv_annDataAnncounts = 32;
const int libGame_gv_capturePointMaxCount_C = 15;
const string libGame_gv_eventID_CameraPannedFromScript_C = "Camera Panned From Script";
const string libGame_gv_eventParam_CameraPannedFromScript_Player_C = "Player";
const string libGame_gv_eventParam_CameraPannedFromScript_Point_C = "Point";
const string libGame_gv_eventID_CapturePointChangesOwner_C = "CapturePointChangesOwner";
const string libGame_gv_eventParam_CapturePointChangesOwner_CapturePointIndex_C = "Capture Point Index";
const string libGame_gv_eventParam_CapturePointChangesOwner_AIOwner_C = "AIOwner";
const string libGame_gv_eventParam_CapturePointChangesOwner_PlayerOwner_C = "PlayerOwner";
const string libGame_gv_eventParam_CapturePointChangesOwner_CapturingPlayers_C = "CapturingPlayers";
const string libGame_gv_eventParam_CapturePointChangesOwner_HasMercLordTalent_C = "HasMercLordTalent";
const string libGame_gv_eventID_CapturePointBecomesFullyOverCaptured_C = "CapturePointBecomesFullyOverCaptured";
const string libGame_gv_eventParam_CapturePointBecomesFullyOverCaptured_CapturePointIndex_C = "Capture Point Index";
const string libGame_gv_eventParam_CapturePointBecomesFullyOverCaptured_HasMercLordTalent_C = "Has Merc Lord Talent";
const string libGame_gv_eventID_JungleDefenderAIDefendersBeginFighting_C = "JungleDefenderAIDefendersBeginFighting";
const string libGame_gv_eventParam_JungleDefenderAIDefendersBeginFighting_Index_C = "Index";
const string libGame_gv_eventID_JungleDefenderAIDefendersEndFighting_C = "JungleDefenderAIDefendersEndFighting";
const string libGame_gv_eventParam_JungleDefenderAIDefendersEndFighting_Index_C = "Index";
const string libGame_gv_eventID_JungleDefenderAIDefenderKilled_C = "JungleDefenderAIDefenderKilled";
const string libGame_gv_eventParam_JungleDefenderAIDefenderKilled_Index_C = "Index";
const string libGame_gv_eventParam_JungleDefenderAIDefenderKilled_Unit_C = "Unit";
const string libGame_gv_eventParam_JungleDefenderAIDefenderKilled_KillingPlayer_C = "Killing Player";
const string libGame_gv_eventID_JungleDefenderAIAllDefendersKilled_C = "JungleDefenderAIAllDefendersKilled";
const string libGame_gv_eventParam_JungleDefenderAIAllDefendersKilled_Index_C = "Index";
const string libGame_gv_eventParam_JungleDefenderAIAllDefendersKilled_KillingPlayer_C = "Killing Player";
const string libGame_gv_eventID_HeroAbilityUsed_C = "HeroAbilityUsed";
const string libGame_gv_eventParam_HeroAbilityUsed_Player_C = "Player";
const string libGame_gv_eventParam_HeroAbilityUsed_AbilityType_C = "AbilityType";
const string libGame_gv_eventParam_HeroAbilityUsed_AbilityLink_C = "AbilityLink";
const string libGame_gv_eventID_HeroKilled_C = "HeroKilled";
const string libGame_gv_eventParam_HeroKilled_PlayerKilled_C = "PlayerKilled";
const string libGame_gv_eventParam_HeroKilled_PlayerKilling_C = "PlayerKilling";
const string libGame_gv_eventParam_HeroKilled_Location_C = "Location";
const string libGame_gv_eventID_HeroParticipatedInTakedown_C = "HeroParticipatedInTakedown";
const string libGame_gv_eventParam_HeroParticipatedInTakedown_Player_C = "PlayerKilling";
const string libGame_gv_eventID_HeroRespawn_C = "HeroRespawn";
const string libGame_gv_eventParam_HeroRespawn_Player_C = "Player";
const string libGame_gv_eventID_MapTributeWarning_C = "MapTributeSpawnWarning";
const string libGame_gv_eventParam_MapTributeWarning_Position_C = "Position";
const string libGame_gv_eventID_MapTributeSpawned_C = "MapTributeSpawned";
const string libGame_gv_eventParam_MapTributeSpawned_Tribute_C = "Tribute";
const string libGame_gv_eventID_MapTributePickedup_C = "MapTributePickedUp";
const string libGame_gv_eventParam_MapTributePickedup_Player_C = "Player";
const string libGame_gv_eventParam_MapTributePickedup_Position_C = "Position";
const string libGame_gv_eventID_MapRavenCurseStarts_C = "MapRavenCurseStarts";
const string libGame_gv_eventParam_MapRavenCurseStarts_Team_C = "Team";
const string libGame_gv_eventID_MapRavenCurseEnds_C = "MapRavenCurseEnds";
const string libGame_gv_eventID_UnitEntersSafeZonePuntRegion_C = "UnitEntersSafeZonePuntRegion";
const string libGame_gv_eventParam_UnitEntersSafeZonePuntRegion_Unit_C = "Unit";
const string libGame_gv_eventParam_UnitEntersSafeZonePuntRegion_PuntPoint_C = "PuntPoint";
const string libGame_gv_eventID_UnitEntersSafeZoneRegion_C = "UnitEntersSafeZoneRegion";
const string libGame_gv_eventParam_UnitEntersSafeZoneRegion_Unit_C = "Unit";
const string libGame_gv_eventID_UnitExitsSafeZoneRegion_C = "UnitExitsSafeZoneRegion";
const string libGame_gv_eventParam_UnitExitsSafeZoneRegion_Unit_C = "Unit";
const string libGame_gv_eventID_PlayerChooseTalent_C = "PlayerChooseTalent";
const string libGame_gv_eventParam_PlayerChooseTalent_Player_C = "Player";
const string libGame_gv_eventParam_PlayerChooseTalent_TalentLink_C = "TalentLink";
const string libGame_gv_eventParam_PlayerChooseTalent_TalentTier_C = "TalentTier";
const string libGame_gv_eventParam_PlayerChooseTalent_TalentColumn_C = "TalentColumn";
const string libGame_gv_eventID_PlayerCanChooseTalents_C = "PlayerCanChooseTalents";
const string libGame_gv_eventParam_PlayerCanChooseTalents_Player_C = "Player";
const fixed libGame_gv_playerCanChooseTalentsTimerDelay = 30.0;
const string libGame_gv_eventID_TeamGetsLevelUp = "TeamGetsLevelUp";
const string libGame_gv_eventParam_TeamGetsLevelUp_Team = "Team Ups";
const int libGame_gv_encouragement_NumberOfDeathTips_C = 9;
const fixed libGame_gv_heroDeathActionCamActivationDelay = 1.0;
const fixed libGame_gv_heroDeathMultikillTimeoutDuration = 6.0;
const fixed libGame_gv_heroDeathParticipatedTalentPointsModificator_C = 1.0;
const fixed libGame_gv_heroDeathNonParticipatedTalentPointsModificator_C = 0.2;
const int libGame_gv_mapLanesCountMax = 3;
const int libGame_gv_mapPointsCountMax = 30;
const fixed libGame_gv_teamAbandonedTheGameTimerDuration_C = 20.0;
const fixed libGame_gv_playerLeftAnnouncementTimerDuration_C = 5.0;
const int libGame_gv_moonwellMaxMoonwellCount = 12;
const fixed libGame_gv_safeZoneKnockbackDistance = 12.0;
const int libGame_gv_safeZoneMaximumPoints_C = 4;
const int libGame_gv_scoreValues_MaxHeroSpecificValues_C = 100;
const int libGame_gv_warpMaxWarpCount = 6;

// Structures
struct libGame_gs_AnnouncementQueue {
    timer lv_messageTimer;
    int lv_numberOfItemsInQueue;
    int[libGame_gv_announcement_QueueMaxCount_C + 1] lv_priority;
    int[libGame_gv_announcement_QueueMaxCount_C + 1] lv_announcerVOEvent;
    int[libGame_gv_announcement_QueueMaxCount_C + 1] lv_animName;
    text[libGame_gv_announcement_QueueMaxCount_C + 1] lv_textParam1;
    text[libGame_gv_announcement_QueueMaxCount_C + 1] lv_textParam2;
    text[libGame_gv_announcement_QueueMaxCount_C + 1] lv_textParam3;
    text[libGame_gv_announcement_QueueMaxCount_C + 1] lv_textParam4;
    fixed[libGame_gv_announcement_QueueMaxCount_C + 1] lv_duration;
    bool[libGame_gv_announcement_QueueMaxCount_C + 1] lv_isKillAnnouncement;
};

struct libGame_gs_Announcements {
    timer lv_messageTimer;
    int lv_numberOfItemsInQueue;
    int[libGame_gv_annDataAnncounts + 1] lv_type;
    int[libGame_gv_announcement_QueueMaxCount_C + 1] lv_announcerVOEvent;
    text[libGame_gv_annDataAnncounts + 1] lv_text;
    string[libGame_gv_annDataAnncounts + 1] lv_backgroundSound;
    int[libGame_gv_annDataAnncounts + 1] lv_soundID;
};

struct libGame_gs_CapturePoint {
    bool lv_enabled;
    unit lv_captureBeaconUnit;
    region lv_captureRegion;
    int lv_captureCounter;
    int lv_pointsNeededToCapture;
    int lv_maximumPoints;
    bool lv_decayToOwner;
    bool lv_rememberLastOwner;
    int lv_captureProgressBar;
};

struct libGame_gs_TalentCatalogChangeData {
    int lv_numberOfFieldChanges;
    int lv_catalog;
    string lv_entry;
    string lv_field;
    bool lv_fieldIsInteger;
    fixed lv_valueAddedPerLevel;
};

struct libGame_gs_LaneInfo {
    int lv_laneCount;
    point[libGame_gv_mapLanesCountMax + 1][libGame_gv_mapPointsCountMax + 1] lv_lanePoints;
    int[libGame_gv_mapLanesCountMax + 1] lv_lanePointsCount;
    point[libCore_gv_bALMaxTeams + 1][libGame_gv_mapLanesCountMax + 1][libGame_gv_mapPointsCountMax + 1] lv_lanePointsForTeam;
    point[libCore_gv_bALMaxTeams + 1][libGame_gv_mapLanesCountMax + 1] lv_laneMinionSpawn;
};

struct libGame_gs_Players {
    int lv_victoryDefeat;
    text lv_playerName;
    text lv_heroName;
    int lv_playerAllySlot;
    int lv_playerEnemySlot;
    timer lv_pingCooldownTimer;
    bool lv_playerisJoinedatStart;
    int lv_heroIndex;
    bool lv_gameEndsForPlayer;
    timer lv_playerLeftAnnouncementTimer;
    bool lv_playerLeftAnnouncementPlayed;
    fixed lv_eXPPoints;
    int lv_talentsCurrentMaxTier;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1] lv_talentsNumberofPickedTalentsPerTier;
    int lv_pickingPressedIndex;
    string lv_pickingUnit;
    int lv_team;
    unit lv_heroUnit;
    unitgroup lv_heroUnitGroup;
    unit lv_selectedUnit;
    unitgroup lv_selectedUnitGroup;
    unit lv_activeVehicle;
    point lv_spawnPoint;
    int lv_faction;
    int lv_tributesCollected;
    int lv_path;
    int lv_multikillStreak;
    timer lv_multikillTimer;
    int lv_killingSpreeCount;
    bool[libCore_gv_bALMaxPlayers + 1] lv_participatedInTakedown;
    timer[libCore_gv_bALMaxPlayers + 1] lv_participatedTimer;
    unit lv_cameraPlayerUnitToFocusOn;
    int lv_cameraAllyPlayerToTrack;
    unit lv_cameraCurrentTarget;
    bool lv_cameraPlayerHasControl;
    bool lv_cameraCameraLockInterrupt;
    bool lv_vOPissedSoundIsPlaying;
    int lv_vOPissedSoundIndex;
    int lv_vOPissedClickCount;
    int lv_selectedAnnouncerVOPack;
    bool[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_mYTalentsTalentPicked;
    fixed lv_lowHPHPAmount;
    sound lv_lowHPStartSound;
    sound lv_lowHPBreathLoop;
    sound lv_lowHPHeartBeatLoop;
    bool lv_lowHPSoundPlaying;
    timer lv_respawnTimer;
    fixed lv_timeSpentDeath;
    bool lv_isDead;
    timer lv_downedStateTimer;
    unit lv_gravestoneUnit;
    int lv_gravestoneTextTag;
    text lv_mountName;
    string lv_mountID;
    string lv_mountModel;
    bool lv_noAttachedMountModel;
    string lv_heroCurrentSkin;
    string lv_heroCurrentSkinUpgrade;
};

struct libGame_gs_ScoreValues {
    int lv_kills;
    int lv_assists;
    int lv_deaths;
    fixed[libCore_gv_bALMaxTeams + 1] lv_siegeDamage;
    fixed[libCore_gv_bALMaxTeams + 1] lv_heroDamage;
    fixed[libCore_gv_bALMaxTeams + 1] lv_healedandAbsorbed;
    fixed[libCore_gv_bALMaxTeams + 1] lv_damageTaken;
    fixed[libCore_gv_bALMaxTeams + 1] lv_individualTalentPointsEarned;
    int lv_multikillStreak;
    int lv_killingSpreeCount;
    int lv_creepCampsCaptured;
    int lv_watchTowersCaptured;
    int lv_takedowns;
    int lv_level;
    int lv_townKills;
    fixed lv_individualXPEarned;
    int lv_tributesCollected;
    int lv_doubloonsCollected;
    int lv_doubloonsDropped;
    int lv_doubloonsTurnedIn;
    int lv_dragonCaptures;
    int lv_skullsCollected;
    int[libGame_gv_scoreValues_MaxHeroSpecificValues_C + 1] lv_heroSpecificScoreValues;
};

struct libGame_gs_Team {
    unit lv_core;
    fixed lv_xPTotals;
    fixed lv_xPTotals2;
    int lv_teamLevel;
    int lv_kills;
    int lv_revives;
    int lv_townKills;
    int lv_townsRemaining;
    int lv_map_MercCampCaptures;
    int lv_map_CursesPlacedOnEnemyTeam;
    playergroup lv_teamPlayerGroup;
    playergroup lv_teamPlayerGroupNoNPCPlayers;
    int lv_teamActivePlayersCount;
    int lv_nPCPlayer;
    int lv_multikillStreak;
    timer lv_multikillTimer;
    bool lv_isCursed;
    string[libCore_gv_bALMaxMercMinionTypes + 1] lv_mercsMinionsUnitType;
    int[libCore_gv_bALMaxMercMinionTypes + 1] lv_mercsMinionsRemainingSpawnCounts;
    unit[libGame_gv_mapLanesCountMax + 1] lv_towerFort;
    unit[libGame_gv_mapLanesCountMax + 1] lv_towerKeep;
    bool[libGame_gv_mapLanesCountMax + 1] lv_towerFortandKeepDestroyed;
    region[libGame_gv_mapLanesCountMax + 1] lv_fortRegion;
    region[libGame_gv_mapLanesCountMax + 1] lv_keepRegion;
    unitgroup[libGame_gv_mapLanesCountMax + 1] lv_fortRegionGROUP;
    unitgroup[libGame_gv_mapLanesCountMax + 1] lv_keepRegionGROUP;
    timer lv_abandonedTheGame;
};

// Variable Declarations
bool libGame_gv_startMinionAI;
int libGame_gv_minionScalingNumber;
timer libGame_gv_minionSpawnTimer;
bool libGame_gv_gAMEFirstBloodAvailable;
string[libGame_gv_unitStatsArmorTypes + 1][libGame_gv_unitStatsArmorUnitTypes + 1][libGame_gv_unitStatsDoubledArmorValue + 1] libGame_gv_unitStatsArmorBehaviorType;
string[libGame_gv_unitStatsArmorTypes + 1][libGame_gv_unitStatsPowerAllValues + 1] libGame_gv_unitStatsPowerBehaviors;
string[libGame_gv_unitStatsHealingAllValues + 1] libGame_gv_unitStatsHealingTakenBehaviors;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libGame_gv_cameraFollowForced;
region[libGame_gv_cameraBound_MaxCount_C + 1] libGame_gv_cameraBound_Regions;
int libGame_gv_cameraBound_Count;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libGame_gv_cameraBound_CurrentCameraBoundForPlayer;
bool libGame_gv_announcement_SystemEnabled;
string libGame_gv_accouncement_FCT_General_C;
string libGame_gv_announcement_FCT_Ally_C;
string libGame_gv_announcement_FCT_Enemy_C;
libGame_gs_AnnouncementQueue[libCore_gv_bALMaxEnginePlayerCount + 1] libGame_gv_announcementQueue;
string libGame_gv_annDefaultAnnSound;
libGame_gs_Announcements[libCore_gv_bALMaxEnginePlayerCount + 1] libGame_gv_annData;
int libGame_gv_capturePointCurrentCount;
libGame_gs_CapturePoint[libGame_gv_capturePointMaxCount_C + 1] libGame_gv_capturePoints;
string libGame_gv_capturePointLastCreatedCapturePointIndex_C;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libGame_gv_playerCanChooseTalentsTimer;
bool libGame_gv_heroDeath_UpdateStats;
bool libGame_gv_heroDeath_RespawnMounted;
int[libCore_gv_bALMaxPlayers + 1] libGame_gv_heroDeath_UtherParticipation;
libGame_gs_LaneInfo libGame_gv_laneInfo;
string[libCore_gv_bALMaxPlayers + 1] libGame_gv_stormMapLightingSpecial;
string[libCore_gv_bALMaxPlayers + 1] libGame_gv_stormMapLightingCurrent;
int[libCore_gv_bALMaxPlayers + 1] libGame_gv_stormMapHeroDeathOverlay;
int[libCore_gv_bALMaxPlayers + 1][libGame_gv_moonwellMaxMoonwellCount + 1] libGame_gv_moonwellTextTags;
unit[libCore_gv_bALMaxPlayers + 1][libGame_gv_moonwellMaxMoonwellCount + 1] libGame_gv_moonwellTextTagsUnit;
unitgroup[libCore_gv_bALMaxPlayers + 1] libGame_gv_moonwellTextTagsUnitGroup;
timer[libCore_gv_bALMaxTeams + 1] libGame_gv_coreTimerNotification;
libGame_gs_Players[libCore_gv_bALMaxEnginePlayerCount + 1] libGame_gv_players;
region[libCore_gv_bALMaxTeams + 1] libGame_gv_safeZoneRegion;
point[libCore_gv_bALMaxTeams + 1][libGame_gv_safeZoneMaximumPoints_C + 1] libGame_gv_safeZoneKnockbackPoint;
unitgroup libGame_gv_safeZonePunchedGroup;
timer libGame_gv_scalingXPTrickleTimer;
bool libGame_gv_scalingAllowXPTrickle;
libGame_gs_ScoreValues[libCore_gv_bALMaxEnginePlayerCount + 1] libGame_gv_scoreValues;
string[libGame_gv_scoreValues_MaxHeroSpecificValues_C + 1] libGame_gv_scoreValuesHeroSpecificScoreLinks;
libGame_gs_Team[libCore_gv_bALMaxTeams + 1] libGame_gv_teams;
int[libGame_gv_warpMaxWarpCount + 1] libGame_gv_warpTextTags;
unit[libGame_gv_warpMaxWarpCount + 1] libGame_gv_warpTextTagsUnit;
unitgroup libGame_gv_warpTextTagsUnitGroup;

// Function Declarations
playergroup libGame_gf_PlayersOnTeamHeroes (int lp_team, bool lp_nPCOption);
int libGame_gf_CustomValueIndex (int lp_customValueIndex);
text libGame_gf_CustomValueGetTextValue (int lp_customValueIndex, unit lp_unit);
int libGame_gf_CustomValueGetAsInteger (int lp_customValueIndex, unit lp_unit);
int libGame_gf_UnitStatsArmorCustomValueIndex (int lp_armorTypeIndex, int lp_armorUnitTypeIndex);
int libGame_gf_UnitStatsArmorCustomValueOfUnit (int lp_armorTypeIndex, int lp_armorUnitTypeIndex, unit lp_unit);
int libGame_gf_UnitStatsValidArmorValueOfUnit (int lp_armorTypeIndex, int lp_armorUnitTypeIndex, unit lp_unit);
bool libGame_gf_UnitStatsTargetUnitHasArmorBehaviorByType (int lp_armorTypeIndex, int lp_armorUnitTypeIndex, unit lp_targetUnit);
bool libGame_gf_UnitStatsUnitNeedsUpdateArmor (int lp_currentValue, int lp_armorType, int lp_armorUnitType, unit lp_targetUnit);
int libGame_gf_UnitStatsCalculateValidArmorValue (int lp_armorCurrentValue);
void libGame_gf_UnitStatsRemoveArmorBehaviorsByAliasFromUnit (int lp_armorTypeIndex, int lp_armorUnitTypeIndex, unit lp_unit);
void libGame_gf_UnitStatsArmorUpdate (unit lp_targetUnit);
int libGame_gf_UnitStatsPowerCustomValueIndex (int lp_powerTypeIndex);
int libGame_gf_UnitStatsPowerCustomValueOfUnit (int lp_powerTypeIndex, unit lp_unit);
int libGame_gf_UnitStatsValidPowerValueOfUnit (int lp_powerTypeIndex, unit lp_unit);
int libGame_gf_UnitStatsCalculateValidPowerValue (int lp_powerCurrentValue);
bool libGame_gf_UnitStatsTargetUnitHasPowerBehaviorByType (int lp_powerTypeIndex, unit lp_targetUnit);
bool libGame_gf_UnitStatsUnitNeedsUpdatePower (int lp_powerCurrentValue, int lp_powerTypeIndex, unit lp_targetUnit);
void libGame_gf_UnitStatsRemovePowerBehaviorsByAliasFromUnit (int lp_powerTypeIndex, unit lp_targetUnit);
void libGame_gf_UnitStatsPowerUpdate (unit lp_unit);
void libGame_gf_UnitStatsCompareHeroAndSummonedPower (unit lp_unit);
int libGame_gf_UnitStatsHealingCustomValueIndex (int lp_healingTypeIndex);
int libGame_gf_UnitStatsHealingCustomValueOfUnit (int lp_healingTypeIndex, unit lp_unit);
unit libGame_gf_UnitStatsVampiricGetDamagingUnit (unit lp_damagingUnit);
fixed libGame_gf_UnitStatsVampiricGetCorrectHealingValue (fixed lp_damage, unit lp_targetUnit, int lp_vampiricHealingType);
int libGame_gf_UnitStatsCalculateValidHealingValue (int lp_healingTakenCurrentValue);
bool libGame_gf_UnitStatsUnitNeedsUpdateHealingTaken (unit lp_targetUnit);
void libGame_gf_UnitStatsUpdateHealing (unit lp_unit);
void libGame_gf_UnitStatsUpdateHealingTakenBehaviors (unit lp_unit);
void libGame_gf_UnitStatsChangeCustomValue (string lp_behavior, int lp_behaviorChange, unit lp_targetUnit);
void libGame_gf_CameraPanCameraForPlayerAndUpdateMapBoundsIfNecessary (int lp_player, point lp_point, fixed lp_duration, fixed lp_initialVelocity, fixed lp_decelerate, bool lp_smart);
void libGame_gf_CameraTrackNextAliveAllyForPlayer (int lp_player);
void libGame_gf_CameraTrackPreviousAliveAllyForPlayer (int lp_player);
void libGame_gf_CameraUpdateCameraForPlayer (int lp_player);
int libGame_gf_CameraBoundStormIndex (region lp_bound);
void libGame_gf_AddCameraBoundsStorm (region lp_bounds);
void libGame_gf_SetCameraBoundsStorm (int lp_index, region lp_bounds);
void libGame_gf_SetCameraBoundStormIndexForPlayer (int lp_player, int lp_boundsIndex);
void libGame_gf_SetCameraBoundStormForPlayer (int lp_player, region lp_bound);
bool libGame_gf_AnnHeroDeathCheckTeamWipe (playergroup lp_team);
text libGame_gf_AnnHeroDeathGetMultikillStreak (int lp_killingPlayer);
text libGame_gf_AnnHeroDeathGetKillingSpree (int lp_killingPlayer);
void libGame_gf_AnnRegisterEvent (int lp_announceType, int lp_player, int lp_heroDiesKillStreakKillingPlayer, int lp_heroDiesDeadPlayer, bool lp_firstblood);
void libGame_gf_AnnCreateNotification (int lp_player, int lp_event);
void libGame_gf_CapturePointChangeOwnership (int lp_capturePointIndex, int lp_newOwner, int lp_newPlayerOwner, playergroup lp_capturingPlayers, bool lp_hasMercLordTalent);
void libGame_gf_CapturePointCreate (unit lp_beaconUnit, fixed lp_captureRadius, fixed lp_captureTime, fixed lp_overCaptureTime, bool lp_decayToOwner, bool lp_rememberLastOwner);
void libGame_gf_CapturePointEnable (int lp_capturePointIndex);
void libGame_gf_CapturePointDisable (int lp_capturePointIndex);
int libGame_gf_LastCreatedCapturePoint ();
bool libGame_gf_CapturePointFullyCaptured (int lp_capturePointIndex);
void libGame_gf_CameraPannedFromScript (trigger t);
void libGame_gf_SendEventCameraPannedFromScript (int lp_player, point lp_point);
point libGame_gf_CameraPannedFromScriptPoint ();
int libGame_gf_CameraPannedFromScriptPlayer ();
void libGame_gf_CapturePointChangesOwner (trigger t);
void libGame_gf_SendEventCapturePointChangesOwner (int lp_capturePointIndex, int lp_owner, int lp_playerOwner, playergroup lp_capturingPlayers, bool lp_hasMercLordTalent);
int libGame_gf_CapturePointChangesOwnerCapturePointIndex ();
int libGame_gf_CapturePointChangesOwnerOwner ();
int libGame_gf_CapturePointChangesOwnerOwner2 ();
playergroup libGame_gf_CapturePointChangesOwnerCapturingPlayers ();
bool libGame_gf_CapturePointChangesOwnerHasMercLordTalent ();
void libGame_gf_CapturePointBecomesFullyOverCaptured (trigger t);
void libGame_gf_SendEventCapturePointBecomesFullyOverCaptured (int lp_capturePointIndex);
int libGame_gf_CapturePointBecomesFullyOverCapturedCapturePointIndex ();
void libGame_gf_JungleDefenderAIDefendersBeginFighting (trigger t);
void libGame_gf_SendEventJungleDefenderAIDefendersBeginFighting (int lp_defenderAIIndex);
int libGame_gf_JungleDefenderAIDefendersBeginFightingIndex ();
void libGame_gf_JungleDefenderAIDefendersEndFighting (trigger t);
void libGame_gf_SendEventJungleDefenderAIDefendersEndFighting (int lp_defenderAIIndex);
int libGame_gf_JungleDefenderAIDefendersEndFightingIndex ();
void libGame_gf_JungleDefenderAIDefenderKilled (trigger t);
void libGame_gf_SendEventJungleDefenderAIDefenderKilled (int lp_defenderAIIndex, unit lp_unit, int lp_killingPlayer);
int libGame_gf_JungleDefenderAIDefenderKilledIndex ();
unit libGame_gf_JungleDefenderAIDefenderKilledUnit ();
int libGame_gf_JungleDefenderAIDefenderKilledKillingPlayer ();
void libGame_gf_JungleDefenderAIAllDefendersKilled (trigger t);
void libGame_gf_SendEventJungleDefenderAIAllDefendersKilled (int lp_defenderAIIndex, int lp_killingPlayer);
int libGame_gf_JungleDefenderAIAllDefendersKilledIndex ();
int libGame_gf_JungleDefenderAIAllDefendersKilledKillingPlayer ();
void libGame_gf_HeroAbilityUsed (trigger t);
void libGame_gf_SendEventHeroAbilityUsed (int lp_player, string lp_abilityType, string lp_abilityLink);
int libGame_gf_HeroAbilityUsedPlayer ();
string libGame_gf_HeroAbilityUsedAbilityTechType ();
string libGame_gf_HeroAbilityUsedAbilityLink ();
void libGame_gf_HeroKilled (trigger t);
void libGame_gf_SendEventHeroKilled (int lp_playerKilled, int lp_playerKilling);
int libGame_gf_HeroKilledKillingPlayer ();
int libGame_gf_HeroKilledPlayer ();
point libGame_gf_HeroKilledLocaiton ();
void libGame_gf_HeroParticipatedInTakedown (trigger t);
void libGame_gf_SendEventHeroParticipatedInTakedown (int lp_player);
int libGame_gf_HeroParticipatedInTakedownKillingPlayer ();
int libGame_gf_HeroParticipatedInTakedownKilledUnit ();
void libGame_gf_HeroRespawn (trigger t);
void libGame_gf_SendEventHeroRespawn (int lp_player);
int libGame_gf_HeroRespawnPlayer ();
void libGame_gf_MapRavenLordTributeWarning (trigger t);
void libGame_gf_SendEventMapTributeWarning (point lp_position);
point libGame_gf_MapTributeWarningPosition ();
void libGame_gf_MapRavenLordTributeSpawned (trigger t);
void libGame_gf_SendEventMapTributeSpawned (unit lp_tribute);
unit libGame_gf_MapTributeSpawnedUnit ();
void libGame_gf_MapRavenLordTributePickedUp (trigger t);
void libGame_gf_SendEventMapTributePickedUp (int lp_player, point lp_positioin);
int libGame_gf_MapTributePickedUpPlayer ();
point libGame_gf_MapTributePickedUpPosition ();
void libGame_gf_MapRavenLordCurseStarts (trigger t);
void libGame_gf_SendEventMapRavenLordCurseStarts (int lp_team);
int libGame_gf_MapRavenLordCurseActivatedTeam ();
void libGame_gf_MapRavenLordCurseEnds (trigger t);
void libGame_gf_SendEventMapRavenLordCurseEnds ();
void libGame_gf_UnitEntersSafeZonePuntRegion (trigger t);
void libGame_gf_SendEventUnitEntersSafeZonePuntRegion (unit lp_unit, point lp_puntPoint);
unit libGame_gf_UnitEntersSafeZonePuntRegionUnit ();
point libGame_gf_UnitEntersSafeZonePuntRegionPuntPoint ();
void libGame_gf_UnitEntersSafeZoneRegion (trigger t);
void libGame_gf_SendEventUnitEntersSafeZoneRegion (unit lp_unit);
unit libGame_gf_UnitEntersSafeZoneRegionUnit ();
void libGame_gf_UnitExitsSafeZoneRegion (trigger t);
void libGame_gf_SendEventUnitExitsSafeZoneRegion (unit lp_unit);
unit libGame_gf_UnitExitsSafeZoneRegionUnit ();
void libGame_gf_PlayerChooseTalent (trigger t);
int libGame_gf_PlayerChooseTalentPlayer ();
int libGame_gf_PlayerChooseTalentTalentTier ();
int libGame_gf_PlayerChooseTalentTalentColumn ();
string libGame_gf_PlayerChooseTalentTalentLink ();
void libGame_gf_SendEventPlayerChooseTalent (int lp_player, int lp_talentTier, int lp_talentColumn);
void libGame_gf_PlayerCanChooseTalentsAnnouncement (trigger t);
void libGame_gf_SendEventPlayerCanChooseTalents (int lp_player);
int libGame_gf_PlayerCanChooseTalentsPlayer ();
void libGame_gf_SendEventCapturePointChangesOwner2 (int lp_team);
int libGame_gf_CapturePointChangesOwnerCapturePointIndex2 ();
void libGame_gf_CapturePointChangesOwner2 (trigger t);
void libGame_gf_HeroDeathHERODIESNEW (point lp_point, int lp_deadPlayer, int lp_killingPlayer);
void libGame_gf_HeroDeathUpdateUIElementsForDeath (int lp_player);
void libGame_gf_HeroDeathUpdateUIElementsForDeath2 (int lp_player);
void libGame_gf_HeroDeathStartRespawnTimer (int lp_player);
void libGame_gf_HeroDeathUpdateRespawnTimer (int lp_respawningPlayer, fixed lp_modificationAmount);
void libGame_gf_HeroDeathPortHeroBackAndSetDeathState (int lp_player);
void libGame_gf_HeroDeathRespawnHeroforPlayer (int lp_player);
bool libGame_gf_LaneIndexisValid (int lp_laneIndex);
void libGame_gf_LevelUpAddHeroUpgradestoTeam (int lp_team);
void libGame_gf_LevelUpAbathurAddTeammatesUpgrades (int lp_player, int lp_team);
void libGame_gf_SpawnWave (int lp_team, int lp_lane);
void libGame_gf_SpawnMinions (int lp_team, int lp_minionType, int lp_lane, point lp_point);
void libGame_gf_ShareUnshareVisionOfAlliesForPlayer (bool lp_onOff, int lp_player);
int libGame_gf_PlayersAliveOnTeam (int lp_team);
int libGame_gf_TeamNumberOfPlayer (int lp_player);
int libGame_gf_EnemyTeamNumberOfPlayer (int lp_player);
int libGame_gf_EnemyTeamNumberOfTeam (int lp_team);
unit libGame_gf_PlayerHeroUnit (int lp_player);
int libGame_gf_PlayerGetPlayerTeam (int lp_player);
void libGame_gf_SafeZoneAddtoPunchedGroup (unit lp_punchedUnit);
void libGame_gf_ScoreValueTrackingTeamScoreValues ();
void libGame_gf_TownAnnounceTownDestroyed (unit lp_town);

// Trigger Declarations
trigger libGame_gt_DefenderScaling;
trigger libGame_gt_MinionSpawn;
trigger libGame_gt_InitData;
trigger libGame_gt_UnitStatsArmorInitialization;
trigger libGame_gt_UnitStatsPowerInitialization;
trigger libGame_gt_UnitStatsVampiricKinetic;
trigger libGame_gt_UnitStatsVampiricEnergetic;
trigger libGame_gt_UnitStatsVampiricStorm;
trigger libGame_gt_UnitStatsHealingTakenInitialization;
trigger libGame_gt_UnitStatsBehaviorChangeCategory;
trigger libGame_gt_HeroUsesAbility;
trigger libGame_gt_AnnouncementTimerExpires;
trigger libGame_gt_CapturePointLogic;
trigger libGame_gt_CCRecognition;
trigger libGame_gt_TurnonAI1112Collision;
trigger libGame_gt_HeroDeathDiabloParticipatedInTakedown;
trigger libGame_gt_HeroDeathUtherParticipatedInTakedown;
trigger libGame_gt_HeroDeathHeroDies;
trigger libGame_gt_HeroDeathHeroRespawnTimerExpires;
trigger libGame_gt_HeroDeathPlayerMultikillTimerExpires;
trigger libGame_gt_ParticipatedinTDHeroDealDamageToEnemy;
trigger libGame_gt_ParticipatedinTDPlayer1;
trigger libGame_gt_ParticipatedinTDPlayer2;
trigger libGame_gt_ParticipatedinTDPlayer3;
trigger libGame_gt_ParticipatedinTDPlayer4;
trigger libGame_gt_ParticipatedinTDPlayer5;
trigger libGame_gt_ParticipatedinTDPlayer6;
trigger libGame_gt_ParticipatedinTDPlayer7;
trigger libGame_gt_ParticipatedinTDPlayer8;
trigger libGame_gt_ParticipatedinTDPlayer9;
trigger libGame_gt_ParticipatedinTDPlayer10;
trigger libGame_gt_SetLanePoints;
trigger libGame_gt_PlayerLeavesGame;
trigger libGame_gt_PlayerRejoinsGame;
trigger libGame_gt_TeamAbandonedTheGameTimerExpires;
trigger libGame_gt_PlayerLeftAnnouncementTimerExpires;
trigger libGame_gt_TeamGetsLevelUp;
trigger libGame_gt_HeroMoonwellCooldownOnOff;
trigger libGame_gt_HeroMoonwellDurationTextTagUpdates;
trigger libGame_gt_TowerDiesDefault;
trigger libGame_gt_TowerDiesDeadBehavior;
trigger libGame_gt_TowerDiesPeriodicFortKeepDead;
trigger libGame_gt_MinionDies;
trigger libGame_gt_FortKeepDies;
trigger libGame_gt_CoreDiesGameOver;
trigger libGame_gt_CoreTakesDamageUI;
trigger libGame_gt_SafeZoneInitialize;
trigger libGame_gt_SafeZoneLaunchMissile;
trigger libGame_gt_SafeZoneUnitEntersPuntZone;
trigger libGame_gt_SafeZoneUnitEntersSafeZone;
trigger libGame_gt_SafeZoneUnitExitsSafeZone;
trigger libGame_gt_SafeZonePunchBehavior;
trigger libGame_gt_SafeZoneSafeBehavior;
trigger libGame_gt_EXPDataPeriodicUpdate;
trigger libGame_gt_ScoreValueTrackingDamageNEW;
trigger libGame_gt_ScoreValueTrackingAbsorbedNEW;
trigger libGame_gt_ScoreValueTrackingHealNew;
trigger libGame_gt_NotificationChooseATalent;
trigger libGame_gt_PlayerChooseATalent;
trigger libGame_gt_UnitCreatedSummoned;
trigger libGame_gt_WarpInititalize;
trigger libGame_gt_WarpCaptured;
trigger libGame_gt_WarpUpdateTextTags;

// Library Initialization
void libGame_InitVariables ();

