include "TriggerLibs/natives"

//--------------------------------------------------------------------------------------------------
// Library: Core
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libCore_ge_BlueRedTeams_Nothing = 0;
const int libCore_ge_BlueRedTeams_Blue = 1;
const int libCore_ge_BlueRedTeams_Red = 2;
const int libCore_ge_MAPName_None = 0;
const int libCore_ge_MAPName_BattleForSlayn = 1;
const int libCore_ge_FloatingTextType_NormalDamage = 0;
const int libCore_ge_FloatingTextType_MediumDamage = 1;
const int libCore_ge_FloatingTextType_HighDamage = 2;
const int libCore_ge_FloatingTextType_InsaneDamage = 3;
const int libCore_ge_FloatingTextType_Healing = 4;
const int libCore_ge_FloatingTextType_Mana = 5;
const int libCore_ge_FloatingTextType_PositiveStatus = 6;
const int libCore_ge_FloatingTextType_NegativeStatus = 7;
const int libCore_ge_FloatingTextType_XP = 8;
const int libCore_ge_FloatingTextType_GlobalXP = 9;
const int libCore_ge_FloatingTextType_BonusDamage = 10;
const int libCore_ge_AnnouncerVOPacks_Null = 0;
const int libCore_ge_AnnouncerVOPacks_ProtossFemale = 1;
const int libCore_ge_AnnouncerVOPacks_ProtossMale = 2;
const int libCore_ge_AnnouncerVOPacks_Default = -1;
const int libCore_ge_AnnouncerVOPacks_Abathur = -1;
const int libCore_ge_AnnouncerVOEvents_Null = 0;
const int libCore_ge_AnnouncerVOEvents_ChooseYourHero = 1;
const int libCore_ge_AnnouncerVOEvents_CountdownRemain = 2;
const int libCore_ge_AnnouncerVOEvents_Countdown30 = 3;
const int libCore_ge_AnnouncerVOEvents_Countdown10 = 4;
const int libCore_ge_AnnouncerVOEvents_Countdown5 = 5;
const int libCore_ge_AnnouncerVOEvents_Countdown4 = 6;
const int libCore_ge_AnnouncerVOEvents_Countdown3 = 7;
const int libCore_ge_AnnouncerVOEvents_Countdown2 = 8;
const int libCore_ge_AnnouncerVOEvents_Countdown1 = 9;
const int libCore_ge_AnnouncerVOEvents_GameStart = 10;
const int libCore_ge_AnnouncerVOEvents_HeroSlain = 11;
const int libCore_ge_AnnouncerVOEvents_HeroSlainObserver = 12;
const int libCore_ge_AnnouncerVOEvents_AllyKilled = 13;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledNonparticipants = 14;
const int libCore_ge_AnnouncerVOEvents_EnemyKilledParticipants = 15;
const int libCore_ge_AnnouncerVOEvents_DoubleKill = 16;
const int libCore_ge_AnnouncerVOEvents_TripleKill = 17;
const int libCore_ge_AnnouncerVOEvents_QuadraKill = 18;
const int libCore_ge_AnnouncerVOEvents_PentaKill = 19;
const int libCore_ge_AnnouncerVOEvents_TeamKill = 20;
const int libCore_ge_AnnouncerVOEvents_BlueTeamKilled = 21;
const int libCore_ge_AnnouncerVOEvents_RedTeamKilled = 22;
const int libCore_ge_AnnouncerVOEvents_AllyFirstBlood = 23;
const int libCore_ge_AnnouncerVOEvents_BlueTeamFirstBlood = 24;
const int libCore_ge_AnnouncerVOEvents_RedTeamFirstBlood = 25;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeStart = 26;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeEndYou = 27;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeEndAlly = 28;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade1Mayhem = 29;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade2Rampage = 30;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade3Untouchable = 31;
const int libCore_ge_AnnouncerVOEvents_KillingSpreeUpgrade4AllStar = 32;
const int libCore_ge_AnnouncerVOEvents_APlayerHasLeftTheGame = 33;
const int libCore_ge_AnnouncerVOEvents_APlayerHasRejoinedTheGame = 34;
const int libCore_ge_AnnouncerVOEvents_GravestoneRevive = 35;
const int libCore_ge_AnnouncerVOEvents_Gravestomp = 36;
const int libCore_ge_AnnouncerVOEvents_GravestompObserver = 37;
const int libCore_ge_AnnouncerVOEvents_AlliedFortDestroyed = 38;
const int libCore_ge_AnnouncerVOEvents_EnemyFortDestroyed = 39;
const int libCore_ge_AnnouncerVOEvents_AlliedKeepDestroyed = 40;
const int libCore_ge_AnnouncerVOEvents_EnemyKeepDestroyed = 41;
const int libCore_ge_AnnouncerVOEvents_BlueTeamDestroysFort = 42;
const int libCore_ge_AnnouncerVOEvents_RedTeamDestroysFort = 43;
const int libCore_ge_AnnouncerVOEvents_BlueTeamDestroysKeep = 44;
const int libCore_ge_AnnouncerVOEvents_RedTeamDestroysKeep = 45;
const int libCore_ge_AnnouncerVOEvents_AlliedCoreUnderAttack = 46;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCoreUnderAttack = 47;
const int libCore_ge_AnnouncerVOEvents_RedTeamCoreUnderAttack = 48;
const int libCore_ge_AnnouncerVOEvents_Victory = 49;
const int libCore_ge_AnnouncerVOEvents_Defeat = 50;
const int libCore_ge_AnnouncerVOEvents_BlueTeamWins = 51;
const int libCore_ge_AnnouncerVOEvents_RedTeamWins = 52;
const int libCore_ge_AnnouncerVOEvents_LegendaryEventStart = 53;
const int libCore_ge_AnnouncerVOEvents_LegendaryEventEnd = 54;
const int libCore_ge_AnnouncerVOEvents_AlliesCaptureMercCamp = 55;
const int libCore_ge_AnnouncerVOEvents_EnemiesCaptureMercCamp = 56;
const int libCore_ge_AnnouncerVOEvents_BlueTeamCapturesMercCamp = 57;
const int libCore_ge_AnnouncerVOEvents_RedTeamCapturesMercCamp = 58;
const int libCore_ge_AnnouncerVOEvents_TalentUnlocked = 59;
const int libCore_ge_AnnouncerVOEvents_EventCount = 60;
const int libCore_ge_AnnouncerVOEvents_GamePaused = -1;
const int libCore_ge_AnnouncerVOEvents_GameResumed = -1;
const int libCore_ge_AnnouncerVOEvents_EventStarts = 61;
const int libCore_ge_AnnouncerVOEvents_EventContinues = 62;
const int libCore_ge_AnnouncerVOEvents_EventEnds = 63;
string libCore_ge_AnnouncerVOEvents_Ident (int lp_val);
const int libCore_ge_BehaviorCategories_None = 0;
const int libCore_ge_BehaviorCategories_MindControl = 1;
const int libCore_ge_BehaviorCategories_TemporaryCloak = 2;
const int libCore_ge_BehaviorCategories_PersistentCloak = 3;
const int libCore_ge_BehaviorCategories_UnrevealableCloak = 4;
const int libCore_ge_HeroAbilityType_None = 0;
const int libCore_ge_HeroAbilityType_Basic = 1;
const int libCore_ge_HeroAbilityType_Trait = 2;
const int libCore_ge_HeroAbilityType_Heroic = 3;
const int libCore_ge_HeroAbilitySlot_None = 0;
const int libCore_ge_HeroAbilitySlot_BasicAbility1 = 1;
const int libCore_ge_HeroAbilitySlot_BasicAbility2 = 2;
const int libCore_ge_HeroAbilitySlot_BasicAbility3 = 3;
const int libCore_ge_HeroAbilitySlot_HeroicAbility = 4;
const int libCore_ge_HeroAbilitySlot_Trait = 5;
const int libCore_ge_HeroAbilitySlot_InventoryAbility1 = 6;
const int libCore_ge_HeroAbilitySlot_InventoryAbility2 = 7;
const int libCore_ge_HeroAbilitySlot_InventoryAbility3 = 8;
const int libCore_ge_HeroAbilitySlot_InventoryAbility4 = 9;
const int libCore_ge_HeroAbilitySlot_InventoryAbility5 = 10;
const int libCore_ge_HeroAbilitySlot_InventoryAbility6 = 11;
const int libCore_ge_HeroTalentType_None = 0;
const int libCore_ge_HeroTalentType_Basic = 1;
const int libCore_ge_HeroTalentType_Trait = 2;
const int libCore_ge_HeroTalentType_Heroic = 3;
const int libCore_ge_HeroTalentType_Active = 4;
const int libCore_ge_HeroTalentType_Passive = 5;
const int libCore_ge_HeroDataAbililitesFlags_ShowHeroSelection = 0;
const int libCore_ge_HeroDataAbililitesFlags_UsesCharges = 1;
const int libCore_ge_HeroDataAbililitesFlags_AffectedbyCDR = 2;
const int libCore_ge_HeroDataAbililitesFlags_AffectedbyOverdrive = 3;
const int libCore_ge_HeroDataAbililitesFlags_Heroic = 4;
const int libCore_ge_HeroDataAbililitesFlags_Trait = 5;
const int libCore_ge_HeroDataAbililitesFlags_ReplacementMount = 6;
const int libCore_ge_HeroDataAbililitesFlags_HideHotkey = 7;
const int libCore_ge_HeroDataHeroRole_None = 0;
const int libCore_ge_HeroDataHeroRole_Warrior = 1;
const int libCore_ge_HeroDataHeroRole_Support = 2;
const int libCore_ge_HeroDataHeroRole_Specialist = 3;
const int libCore_ge_HeroDataHeroRole_Assasin1 = 4;
const int libCore_ge_HeroDataHeroRole_Assasin2 = 5;
const int libCore_ge_HeroDataUniverse_None = 0;
const int libCore_ge_HeroDataUniverse_WarCraft = 1;
const int libCore_ge_HeroDataUniverse_StarCraft = 2;
const int libCore_ge_HeroDataUniverse_Diablo = 3;
const int libCore_ge_AbilityCategory_DisabledWhileDead = 0;
const int libCore_ge_AbilityCategory_HeroAbility1Q = 1;
const int libCore_ge_AbilityCategory_HeroAbility2W = 2;
const int libCore_ge_AbilityCategory_HeroAbility3E = 3;
const int libCore_ge_AbilityCategory_User5 = 4;
const int libCore_ge_AbilityCategory_Magic = 5;
const int libCore_ge_AbilityCategory_Physical = 6;
const int libCore_ge_AbilityCategory_Aura = 7;
const int libCore_ge_AbilityCategory_HeroAbility5D = 8;
const int libCore_ge_AbilityCategory_Dispel = 9;
const int libCore_ge_AbilityCategory_PassivePhysical = 10;
const int libCore_ge_AbilityCategory_PassiveMagic = 11;
const int libCore_ge_AbilityCategory_Heal = 12;
const int libCore_ge_AbilityCategory_SpellSteal = 13;
const int libCore_ge_AbilityCategory_Repair = 14;
const int libCore_ge_AbilityCategory_Polymorph = 15;
const int libCore_ge_AbilityCategory_BlockByMorph = 16;
const int libCore_ge_AbilityCategory_HeroAbility4R = 17;
const int libCore_ge_AbilityCategory_CabBeDisabled = 18;
const int libCore_ge_AbilityCategory_CabBeSilenced = 19;
const int libCore_ge_AbilityCategory_CabBeIllusionDisabled = 20;
const int libCore_ge_CommandersCatalogDamageType_Kinetic = 0;
const int libCore_ge_CommandersCatalogDamageType_NonHero = 1;
const int libCore_ge_CommandersCatalogDamageType_Storm = 2;
const int libCore_ge_CommandersCatalogDamageType_Energetic = 3;
const int libCore_ge_CommandersCatalogDamageType_NoProc = 4;
const int libCore_ge_CollisionTypes_Land01Minion = 0;
const int libCore_ge_CollisionTypes_Land02Hero = 1;
const int libCore_ge_CollisionTypes_Land03HeroTeam1andMinionTeam2 = 2;
const int libCore_ge_CollisionTypes_Land04HeroTeam2andMinionTeam1 = 3;
const int libCore_ge_CollisionTypes_Land05 = 4;
const int libCore_ge_CollisionTypes_Land06Structure = 5;
const int libCore_ge_CollisionTypes_Land07 = 6;
const int libCore_ge_CollisionTypes_Land08 = 7;
const int libCore_ge_CollisionTypes_Land09 = 8;
const int libCore_ge_CollisionTypes_Land10 = 9;
const int libCore_ge_CollisionTypes_Land11 = 10;
const int libCore_ge_CollisionTypes_Land12 = 11;
const int libCore_ge_CollisionTypes_Land13 = 12;
const int libCore_ge_CollisionTypes_Land14 = 13;
const int libCore_ge_CollisionTypes_Land15 = 14;
const int libCore_ge_CollisionTypes_Land16VorazunVoid = 15;
const int libCore_ge_CollisionTypes_Air01 = 16;
const int libCore_ge_CollisionTypes_Air02 = 17;
const int libCore_ge_CollisionTypes_Air03 = 18;
const int libCore_ge_CollisionTypes_Air04 = 19;
const int libCore_ge_CollisionTypes_Air05 = 20;
const int libCore_ge_CollisionTypes_Air06 = 21;
const int libCore_ge_CollisionTypes_Air07 = 22;
const int libCore_ge_CollisionTypes_Air08 = 23;
const int libCore_ge_CollisionTypes_Air09 = 24;
const int libCore_ge_CollisionTypes_Air10 = 25;
const int libCore_ge_CollisionTypes_Air11 = 26;
const int libCore_ge_CollisionTypes_Air12 = 27;
const int libCore_ge_CollisionTypes_Air13 = 28;
const int libCore_ge_CollisionTypes_Air14 = 29;
const int libCore_ge_CollisionTypes_Air15 = 30;
const int libCore_ge_CollisionTypes_Air16 = 31;
const int libCore_ge_CollisionOperationType_TurnOn = 0;
const int libCore_ge_CollisionOperationType_TurnOff = 1;
const int libCore_ge_CollisionOperationType_Toggle = 2;
const int libCore_ge__UnitDataType_Actor = 0;
const int libCore_ge__UnitDataType_Integer = 1;
const int libCore_ge__UnitDataType_Ping = 2;
const int libCore_ge__UnitDataType_Point = 3;
const int libCore_ge__UnitDataType_Region = 4;
const int libCore_ge__UnitDataType_TextTag = 5;
const int libCore_ge__UnitDataType_Unit = 6;
const int libCore_ge__UnitDataType_UnitGroup = 7;

// Constants
const fixed libCore_gv_timerBGS = 30.0;
const int libCore_gv_dataMountsMaxMountCount = 50;
const string libCore_gv_mountModelActor = "MountModel";
const int libCore_gv_dataMountsMaxActorMessageCount = 32;
const int libCore_gv_cOMPUTER_Red = 12;
const int libCore_gv_cOMPUTER_Blue = 11;
const int libCore_gv_cOMPUTER_Hostile = 15;
const int libCore_gv_cOMPUTER_Neutral = 0;
const int libCore_gv_oBSERVER_ObserverUIPlayer = 13;
const int libCore_gv_defaultHeroSeleciotionTime = 120;
const fixed libCore_gv_floatingCombatTextStandardDuration = 2.5;
const int libCore_gv_dataAnnouncerVONumberOfAnnouncerPacks = 1;
const int libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents = 80;
const int libCore_gv_behaviorsQuestMaxCount = 200;
const int libCore_gv_behaviorCategoriesMaximumCategories = 3;
const int libCore_gv_behaviorCategoriesMaximumBehaviorsPerCategory = 200;
const int libCore_gv_cOLOROrderPlayerColor = 0;
const int libCore_gv_cOLORChaosPlayerColor = 14;
const int libCore_gv_cOLORHostilePlayerColor = 1;
const int libCore_gv_cOLORNeutralPlayerColor = 5;
const int libCore_gv_heroes_MaxSkinsPerHero_C = 64;
const int libCore_gv_heroes_MaxMountsPerHero_C = 32;
const int libCore_gv_dataHeroesMaxHeroCount = 50;
const int libCore_gv_dataHeroesNumberOfAbilitiesPerHero = 7;
const int libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 = 3;
const int libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 = 2;
const int libCore_gv_dataHeroesNumberOfHeroClasses = 4;
const int libCore_gv_dataHeroesNumberOfHeroesPerClass = 10;
const int libCore_gv_dataHeroesMaxTalentsTiers = 7;
const int libCore_gv_dataHeroesMaxTalentsperTier = 7;
const int libCore_gv_dataHeroesMaxTalentsCount = 49;
const int libCore_gv_dataHeroesMaxBehaviorsPerTalent = 5;
const int libCore_gv_dataHeroesMaxAbilties = 20;
const int libCore_gv_dataHeroesMaxPrestigeAbilities = 8;
const int libCore_gv_dataHeroesMaxPrestigeAbilitiesPerPlayer = 2;
const int libCore_gv_dataMaxCatalogChangesPerAbility = 25;
const int libCore_gv_bALMaxMercenaryPathLayers = 3;
const int libCore_gv_killingSpree_KillThresholdBase_C = 5;
const int libCore_gv_killingSpree_KillThresholdUpgrade1_C = 10;
const int libCore_gv_killingSpree_KillThresholdUpgrade2_C = 15;
const int libCore_gv_killingSpree_KillThresholdUpgrade3_C = 20;
const int libCore_gv_killingSpree_KillThresholdUpgrade4_C = 25;
const int libCore_gv_bALMaxMercMinionTypes = 3;
const int libCore_gv_bALMaxMinionTypes = 4;
const int libCore_gv_bALMaxTalentLevels = 15;
const int libCore_gv_bALMaxTeams = 2;
const int libCore_gv_bALMaxPlayers = 10;
const int libCore_gv_bALMaxPlayersOnATeam = 5;
const int libCore_gv_bALMaxEnginePlayerCount = 15;
const int libCore_gv_bALMaxLevel = 30;
const fixed libCore_gv_bALXPRadius = 12.75;
const fixed libCore_gv_bALHeroKillXPRadius = 20.0;
const fixed libCore_gv_bALTrebuchetKillXPRadius = 40.0;
const fixed libCore_gv_bALRecentDamageResetTime = 5.0;
const fixed libCore_gv_bALXPSharingBonus = 1.2;
const int libCore_gv_bALPlayerActiveInventorySlots = 6;
const int libCore_gv_bALPlayerTotalInventorySlots = 6;
const int libCore_gv_bALPlayerMaxPassiveItems = 5;
const fixed libCore_gv_bALGravestonePlacementRange = 100.0;
const fixed libCore_gv_bALDamageClassGravestoneStompBonus = 1.0;
const fixed libCore_gv_bALSupportClassGravestoneReviveBonus = 3.0;
const fixed libCore_gv_bALHealthRegenTime = 480.0;
const fixed libCore_gv_bALManaRegenTime = 180.0;
const fixed libCore_gv_bALDiabloSoulstoneDeathTime = 5.0;
const fixed libCore_gv_bALTyraelPassiveDeathTimeReduction = 10.0;
const int libCore_gv_dataTalentsNumberOfUltChoicesPerHero = 2;
const int libCore_gv_bALHeroSwapDelay = 1;
const fixed libCore_gv_bALHeroSwapUltCooldown = 30.0;
const int libCore_gv_talents_MaxTalentProfileEntryCount_C = 60;
const int libCore_gv_talents_MaxDefaultTalentProfilesPerHero_C = 20;
const int libCore_gv_talents_MaxCustomTalentProfilesPerHero_C = 20;
const int libCore_gv_talents_MaxTotalTalentProfilesPerHero_C = 40;
const int libCore_gv_talents_MaxTalentEntryCount_C = 500;
const int libCore_gv_talents_MaxTalentsPerHero_C = 42;
const int libCore_gv_talents_MaxTalentPoints_C = 30;
const int libCore_gv_talents_MaxTalentPointsPerLevel_C = 2;
const int libCore_gv_talents_MaxTalentRank_C = 1;
const int libCore_gv_talents_MaxTalentBehaviorsPerRank_C = 5;
const int libCore_gv_talents_MaxMutuallyExclusiveTalents_C = 3;
const int libCore_gv_talents_MaxPrerequisiteTalents_C = 2;
const int libCore_gv_talents_PointsRequiredPerTier_C = 4;
const int libCore_gv_talents_MaxModifedAbilitiesPerTalent_C = 20;
const int libCore_gv_talents_DefaultProfileIndex_C = 1;
const int libCore_gv_talents_AutobuyProfileIndex_C = 2;
const fixed libCore_gv_talents_HardenedFocus_Percent_C = 0.25;
const fixed libCore_gv_talents_Rewind_UltimateCD_C = 10.0;
const fixed libCore_gv_talents_Executioner1BonusDamage_C = 0.5;
const fixed libCore_gv_talents_Executioner2BonusDamage_C = 0.5;
const fixed libCore_gv_talents_Demolitionist1Struct_C = 0.4;
const fixed libCore_gv_talents_Demolitionist2Struct_C = 0.8;
const fixed libCore_gv_talents_Demolitionist3Struct_C = 0.9;
const fixed libCore_gv_talents_Demolitionist1Minions_C = 0.3;
const fixed libCore_gv_talents_Demolitionist2Minions_C = 0.6;
const fixed libCore_gv_talents_Demolitionist3Minions_C = 0.6;
const fixed libCore_gv_talents_ConstantHeroism1 = 0.15;
const fixed libCore_gv_talents_ConstantHeroism2 = 0.3;
const fixed libCore_gv_talents_Bucket_ConstantHeroism_C = 0.3;
const fixed libCore_gv_talents_Vampirism1SpellVampHealthHeroAmount_C = 0.05;
const fixed libCore_gv_talents_Vampirism1SpellVampHealthNonHeroAmount_C = 0.025;
const fixed libCore_gv_talents_Vampirism2SpellVampHealthHeroAmount_C = 0.1;
const fixed libCore_gv_talents_Vampirism2SpellVampHealthNonHeroAmount_C = 0.05;
const fixed libCore_gv_talents_Vampirism3SpellVampHealthHeroAmount_C = 0.15;
const fixed libCore_gv_talents_Vampirism3SpellVampHealthNonHeroAmount_C = 0.075;
const fixed libCore_gv_talents_Vampirism1SpellVampEnergyHeroAmount_C = 0.02;
const fixed libCore_gv_talents_Vampirism1SpellVampEnergyNonHeroAmount_C = 0.01;
const fixed libCore_gv_talents_Vampirism2SpellVampEnergyHeroAmount_C = 0.04;
const fixed libCore_gv_talents_Vampirism2SpellVampEnergyNonHeroAmount_C = 0.02;
const fixed libCore_gv_talents_Vampirism3SpellVampEnergyHeroAmount_C = 0.06;
const fixed libCore_gv_talents_Vampirism3SpellVampEnergyNonHeroAmount_C = 0.03;
const fixed libCore_gv_talents_ExpertMarksmanBehaviorReduction_C = 1.0;
const fixed libCore_gv_talents_OverdriveManaCostIncreasePercent_C = 0.5;
const fixed libCore_gv_talents_BucketOverdriveManaCostIncreasePercent_C = 0.4;
const fixed libCore_gv_bALNecromancyDamageLeech = 0.05;
const fixed libCore_gv_bALZeratulPrelateScythesShieldReturns = 0.01;
const fixed libCore_gv_bAL33PercentCCReduction = 0.33;
const fixed libCore_gv_bAL6PercentCCReduction = 0.6;
const fixed libCore_gv_bAL5PercentCCReduction = 0.5;
const fixed libCore_gv_bAL4JuggernautCCReduction = 0.4;
const fixed libCore_gv_bALExecutionerDamagePercentage = 0.5;
const fixed libCore_gv_bALBloodletterLifeStealRate = 0.15;
const int libCore_gv_talentsBucket_MaxTiers_C = 7;
const int libCore_gv_talentsBucket_MaxTalentsPerTier_C = 10;
const int libCore_gv_talentsBucket_MaxPicksPerTier_C = 3;
const int libCore_gv_talentsBucket_MaxHeroicPicks_C = 2;
const int libCore_gv_talentsBucket_MaxPicksPerTier_DEBUG_C = libCore_gv_talentsBucket_MaxTalentsPerTier_C;
const int libCore_gv_talentsBucket_MaxTalentEntryCount_C = 42;
const int libCore_gv_talents_NumberOfABChoices_C = 4;
const int libCore_gv_talentsBucket_NumberOfABChoices = libCore_gv_talentsBucket_MaxTiers_C;
const int libCore_gv_talents_MaxABChoiceButtonCount_C = 3;
const int libCore_gv_talents_MaxABChoiceButtonCount_DEBUG_C = libCore_gv_talentsBucket_MaxTalentsPerTier_C;
const fixed libCore_gv_scaling_Minion_Melee_Value = 1.2;
const fixed libCore_gv_scaling_Minion_Psionic_Value = 1.8;
const fixed libCore_gv_scaling_Minion_Ranged_Value = 2.0;
const fixed libCore_gv_scaling_Mercenary_BruiserHybrid_Value = 4.0;
const fixed libCore_gv_scaling_Mercenary_BossColossus_Value = 6.0;
const fixed libCore_gv_scaling_Mercenary_BossElemental_Value = 10.0;
const fixed libCore_gv_data_XP_TricklePeriod_C = 1.0;
const fixed libCore_gv_data_XP_TrickleAmount_C = 20.0;
const fixed libCore_gv_data_TalentPoints_HeroNearModificator_C = 1.0;
const fixed libCore_gv_data_TalentPoints_HeroFarAwayModificator_C = 0.5;
const fixed libCore_gv_eXP_Passive = 10.0;
const fixed libCore_gv_eXP_Warp_TricklePeriod_C = 5.0;
const fixed libCore_gv_eXP_Warp_TrickleAmout_C = 120.0;
const fixed libCore_gv_eXP_Tower_Value = 150.0;
const fixed libCore_gv_eXP_Fort_Value = 800.0;
const fixed libCore_gv_eXP_Keep_Value = 1300.0;
const fixed libCore_gv_eXP_Minion_Melee_Value = 58.0;
const fixed libCore_gv_eXP_Minion_Psionic_Value = 52.0;
const fixed libCore_gv_eXP_Minion_Ranged_Value = 45.0;
const fixed libCore_gv_eXP_Minion_Catapult_Value = 5.0;
const fixed libCore_gv_eXP_Mercenary_Hybrid_Value_C = 70.0;
const fixed libCore_gv_eXP_Mercenary_Colossus_Value_C = 250.0;
const fixed libCore_gv_eXP_Mercenary_SlaynElemental_Value_C = 250.0;
const fixed libCore_gv_eXP_Defender_SiegeGiant_Value = 25.0;
const fixed libCore_gv_eXP_Defender_Knight_Value = 38.0;
const fixed libCore_gv_eXP_Defender_Golem_Value = 185.0;
const fixed libCore_gv_eXP_Laner_SiegeGiant_Value = 33.0;
const fixed libCore_gv_eXP_Laner_Knight_Value = 50.0;
const fixed libCore_gv_eXP_Laner_Golem_Value = 250.0;
const fixed libCore_gv_eXP_Camp_SiegeGiant_Value = 150.0;
const fixed libCore_gv_eXP_Camp_Knight_Value = 450.0;
const fixed libCore_gv_eXP_Camp_Golem_Value = 565.0;
const fixed libCore_gv_eXP_Camp_BruiserHybrids_Value = 455.0;
const fixed libCore_gv_eXP_Camp_BossElemental_Value = 2100.0;
const fixed libCore_gv_eXP_Camp_BossColossus_Value = 1800.0;
const fixed libCore_gv_data_XP_HeroValuePerLevel_C = 60.0;
const int libCore_gv_data_XP_HeroLevelModifier_C = 5;
const fixed libCore_gv_data_XP_Hero1LevelGapMultiplier_C = 0.2;
const fixed libCore_gv_data_XP_Hero2LevelGapMultiplier_C = 0.4;
const fixed libCore_gv_data_XP_Hero3LevelGapMultiplier_C = 0.6;
const fixed libCore_gv_data_XP_Hero4LevelGapMultiplier_C = 0.8;
const fixed libCore_gv_data_XP_Hero5LevelGapMultiplier_C = 1.0;

// Structures
struct libCore_gs_HeroMountData {
    bool lv_isFree;
    string[9] lv_requiredRewardArray;
    int lv_requiredRewardCount;
    text lv_mountName;
    string lv_mountID;
    string lv_mountModel;
    bool lv_noAttachedMountModel;
    string[libCore_gv_dataMountsMaxActorMessageCount + 1] lv_actorMessageArray;
    int lv_actorMessageCount;
};

struct libCore_gs_AnnouncerVOPack {
    text lv_name;
    soundlink[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] lv_sounds;
    string lv_announcer;
    string lv_stringName;
    string[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] lv_soundLinkArray;
};

struct libCore_gs_BehaviorsQuestData {
    string lv_behavior;
    int lv_questUpdatePerStackCount;
    int[libCore_gv_bALMaxPlayers + 1] lv_lastUpdatedStackCount;
};

struct libCore_gs_BehaviorCategories {
    string lv_categoryController;
    string[libCore_gv_behaviorCategoriesMaximumBehaviorsPerCategory + 1] lv_categoryBehaviors;
    int lv_currentBehaviorsCount;
};

struct libCore_gs_HeroAbilityData {
    int lv_abilityType;
    int lv_abilitySlot;
    bool lv_isAffectedByCooldownReduction;
    bool lv_isAffectedByOverdrive;
    bool lv_isHeroSelectionVisibility;
    bool lv_isPassive;
    bool lv_isUsesCharges;
    bool lv_isHeroic;
    bool lv_isTrait;
    bool lv_isAlternateHeroUnitAbility;
    bool lv_isInventoryAbility;
    string lv_inentoryUnitType;
    string lv_abilityLink;
    string lv_abilityButtonLink;
    text lv_abilityName;
    text lv_abilitySimpleText;
    text lv_abilityTooltipText;
    string lv_abilityIcon;
    text lv_abilityHotkey;
    text lv_abilityInfo;
};

struct libCore_gs_HeroTalentData {
    int lv_talentType;
    string lv_talentLink;
    string lv_talentButtonLink;
    bool lv_isActive;
    bool lv_isTrait;
    bool lv_isQuest;
    text lv_talentName;
    text lv_talentSimpleText;
    text lv_talentInfoText;
    text[libCore_gv_bALMaxEnginePlayerCount + 1] lv_talentTooltipText;
    string lv_talentIcon;
    text lv_talentHotkey;
    string[libCore_gv_dataHeroesMaxBehaviorsPerTalent + 1] lv_talentBehavior;
    string lv_talentItem;
    string lv_talentUpgrade;
    string lv_questBehaviorLink;
    int lv_questBehaviorMaxStacks;
};

struct libCore_gs_HeroPrestigeData {
    string[libCore_gv_dataHeroesMaxPrestigeAbilitiesPerPlayer + 1] lv_abilityLink;
    string lv_cooldownLink;
};

struct libCore_gs_HeroData {
    string lv_heroCatalogLink;
    string lv_heroLevelUpgrade;
    string lv_heroUnitType;
    string lv_heroUnitTypeAlternate;
    int lv_class;
    int lv_universe;
    string lv_universeIcon;
    text lv_description;
    string lv_portrait;
    string lv_leaderboardImage;
    string lv_heroSelectScreenButtonPortrait;
    string lv_heroSelectScreenDraftPortrait;
    string lv_heroSelectScreenBackgroundImage;
    string lv_topPanelImage;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1] lv_talentsCountPerTier;
    libCore_gs_HeroTalentData[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsData;
    text lv_name;
    libCore_gs_HeroAbilityData[libCore_gv_dataHeroesMaxAbilties + 1] lv_abilitiesData;
    int lv_abilitiesCount;
};

struct libCore_gs_AbilityModificationData {
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1] lv_icon;
    text[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1] lv_tooltipAddendum;
    int[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1] lv_numberOfFieldChanges;
    int[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_changeType;
    int[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_catalog;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_entry;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_field;
    bool[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_fieldIsInteger;
    fixed[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_value;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_stringReplacementValue;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_catalogReplaceFrom;
    string[libCore_gv_talents_MaxModifedAbilitiesPerTalent_C + 1][libCore_gv_dataMaxCatalogChangesPerAbility + 1] lv_catalogChangeTo;
};

struct libCore_gs_TalentRankData {
    string lv_item;
    string lv_upgrade;
    int lv_behaviorCount;
    string[libCore_gv_talents_MaxTalentBehaviorsPerRank_C + 1] lv_behaviors;
    fixed lv_abilityPower;
    fixed lv_cooldownReduction;
    fixed lv_attackDamage;
    fixed lv_increaseAttackSpeed;
    fixed lv_hitPoints;
    fixed lv_shields;
    fixed lv_mana;
    fixed lv_manaRegen;
    fixed lv_hitPointRegen;
};

struct libCore_gs_TalentData {
    string lv_talentCatalogLink;
    text[libCore_gv_talents_MaxTalentRank_C + 1] lv_name;
    string[libCore_gv_talents_MaxTalentRank_C + 1] lv_icon;
    text[libCore_gv_talents_MaxTalentRank_C + 1] lv_tooltip;
    string lv_masteryAbilLink;
    int lv_rankCount;
    libCore_gs_TalentRankData[libCore_gv_talents_MaxTalentRank_C + 1] lv_rankData;
    libCore_gs_AbilityModificationData lv_abilityModificationData;
    int lv_abilityModifications;
};

struct libCore_gs_TalentProfileData {
    string lv_talentProfileCatalogLink;
    text lv_name;
    bool lv_hidden;
    int lv_talentCount;
    int[libCore_gv_talents_MaxTalentPoints_C + 1] lv_talents;
};

struct libCore_gs_TalentsTierInfo {
    fixed lv_price;
    int lv_maximumAvailiableTalents;
};

struct libCore_gs_ABChoices {
    int lv_unlockLevel;
    int lv_numberOfButtons;
    text lv_choiceText;
    bool lv_appliesMasteryModifications;
};

// Variable Declarations
bool libCore_gv_sYSAIEnabled;
bool libCore_gv_sYSMinionsAIEnabled;
bool libCore_gv_sYSTowerAI;
bool libCore_gv_sYSEventsEnabled;
playergroup libCore_gv_dEBUGAdminTeam;
bool libCore_gv_dEBUGHelpTextTagsEnabled;
bool libCore_gv_dEBUGCombatTextEnabled;
bool libCore_gv_dEBUGTooltipsEnabled;
bool libCore_gv_dEBUGMinionTooltipsEnabled;
bool libCore_gv_gameOver;
bool libCore_gv_gameStarted;
int libCore_gv_numberofPlayerstoSpawnHeroes;
point[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] libCore_gv_mAPStartPoints;
string libCore_gv_mAPMapTileset;
string libCore_gv_mAPMapLight;
int libCore_gv_mAPCurrentMap;
timer libCore_gv_openTheGatesTimer;
timer libCore_gv_timerBeforeGameStart;
timer libCore_gv_gameTimer;
int libCore_gv_dataMountsMountCount;
libCore_gs_HeroMountData[libCore_gv_dataMountsMaxMountCount + 1] libCore_gv_dataMountsMountData;
playergroup libCore_gv_allHeroPlayersPlusObserver;
playergroup libCore_gv_teamOrder;
playergroup libCore_gv_teamChaos;
playergroup libCore_gv_activeHumanPlayers;
playergroup libCore_gv_nPCPlayers;
playergroup[libCore_gv_bALMaxEnginePlayerCount + 1] libCore_gv_playerGroupFromPlayer;
string[libCore_gv_dataAnnouncerVOMaxNumberOfAnnouncerEvents + 1] libCore_gv_dataAnnouncerVODataFieldMap;
libCore_gs_AnnouncerVOPack[libCore_gv_dataAnnouncerVONumberOfAnnouncerPacks + 1] libCore_gv_dataAnnouncerVOPacks;
libCore_gs_BehaviorsQuestData[libCore_gv_behaviorsQuestMaxCount + 1] libCore_gv_behaviorsQuestData;
int libCore_gv_behaviorsQuestCurrentMaxCount;
bool[libCore_gv_behaviorsQuestMaxCount + 1][libCore_gv_bALMaxEnginePlayerCount + 1] libCore_gv_behaviorsQuestCompletedByPlayer;
libCore_gs_BehaviorCategories[libCore_gv_behaviorCategoriesMaximumCategories + 1] libCore_gv_behaviorCategories;
color libCore_gv_cOLORPlayerColor;
color libCore_gv_cOLORAllyColor;
color libCore_gv_cOLOREnemyColor;
color libCore_gv_cOLORNeutralColor;
color libCore_gv_cOLORJungleCreepColor;
int libCore_gv_dataHeroesNumberOfHeroes;
libCore_gs_HeroPrestigeData[libCore_gv_dataHeroesMaxPrestigeAbilities + 1] libCore_gv_heroPrestigeData;
libCore_gs_HeroData[libCore_gv_dataHeroesMaxHeroCount + 1] libCore_gv_heroData;
int libCore_gv_dataNumberOfTalentsWithCatalogChanges;
int[libCore_gv_bALMaxLevel + 1] libCore_gv_levelData;
fixed libCore_gv_bALCancelDelay;
fixed libCore_gv_bALHeroKillCreditTimeWindow;
fixed[libCore_gv_bALMaxLevel + 1] libCore_gv_bALDeathTimes;
fixed libCore_gv_bALMaxDeathTime;
string[libCore_gv_bALMaxEnginePlayerCount + 1][libCore_gv_dataHeroesMaxPrestigeAbilitiesPerPlayer + 1] libCore_gv_prestigeAbilitiesPlayerCurrentPrestigeAbility;
int libCore_gv_bALTalentPoints;
int libCore_gv_bALMaxSwapsRespecs;
libCore_gs_TalentData[libCore_gv_talents_MaxTalentEntryCount_C + 1] libCore_gv_talents_TalentData;
int libCore_gv_talents_TalentEntryCount;
libCore_gs_TalentProfileData[libCore_gv_talents_MaxTalentProfileEntryCount_C + 1] libCore_gv_talents_TalentProfiles;
int libCore_gv_talents_TalentProfileCount;
libCore_gs_TalentsTierInfo[libCore_gv_dataHeroesMaxTalentsTiers + 1] libCore_gv_talentsTierInfo;
fixed libCore_gv_talents_HardenedFocus_Value_C;
fixed libCore_gv_talents_RelentlessCCReduction20_C;
fixed libCore_gv_talents_RelentlessCCReduction40_C;
fixed libCore_gv_talents_RelentlessCCReduction60_C;
fixed libCore_gv_talents_RelentlessCCReduction75_C;
fixed libCore_gv_talents_EyeOfTheStormExplosionDamagePercentage;
fixed libCore_gv_talents_FuryOfTheStormBounceDamagePercent_C;
libCore_gs_ABChoices[libCore_gv_talents_NumberOfABChoices_C + 1] libCore_gv_aBChoices;
libCore_gs_ABChoices[libCore_gv_talentsBucket_NumberOfABChoices + 1] libCore_gv_aBChoicesBuckets;

// Function Declarations
int libCore_gf_DataMountGetMountIndexFromMountLink (string lp_mountLink);
int libCore_gf_BehaviorsQuestFreeIndex ();
int libCore_gf_BehaviorsQuestBehaviorIndex (string lp_behavior);
bool libCore_gf_BehaviorsQuestBehaviorExist (string lp_behavior);
bool libCore_gf_BehaviorsQuestValidToCreateIncreaseFX (int lp_player, int lp_behaviorIndex, int lp_stacksCountCurrent);
bool libCore_gf_BehaviorCategoriesBehaviorExist (int lp_category, string lp_behaviorLink);
void libCore_gf_BehaviorCategoriesIncludeBehaviorInList (int lp_category, string lp_behavior);
void libCore_gf_BehaviorCategoriesRemoveAllBehaviorsByCategoryFromUnit (int lp_behaviorCategory, unit lp_unit);
void libCore_gf_BehaviorCategoriesRemoveAllBehaviorsByCategoryControllerFromUnit (string lp_categoryController, unit lp_unit);
void libCore_gf_BehaviorCategoriesSetBehaviorCategoryController (int lp_category, string lp_behavior);
void libCore_gf_BehaviorCategoriesRemoveCategoryFromUnit (int lp_behaviorCategory, unit lp_unit);
int libCore_gf_BehaviorCategoriesCommandersCategoryPresetOfBehavior (string lp_behavior);
int libCore_gf_BehaviorCategoriesCommandersCategoryIntegerOfBehavior (string lp_behavior);
int libCore_gf_BehaviorCategoriesCategoryPresetFromInteger (int lp_categoryNumber);
void libCore_gf_GameStartSpawnHero (int lp_player, int lp_spawnDelay);
text libCore_gf_AbilityTalentHotkeyText (text lp_hotkeyText, int lp_type);
void libCore_gf_DataInitializeAbilitiesDataForHero (int lp_heroID);
void libCore_gf_DataInitializeTalentsDataForHero (int lp_heroID);
void libCore_gf_DataInitializePrestigeData ();
int libCore_gf_RoleGetHeroRoleofHeroPreset (string lp_hero);
text libCore_gf_RoleGetHeroRoleofHeroText (string lp_hero);
int libCore_gf_UniverseGetHeroUniverse (string lp_hero);
int libCore_gf_HeroicAbilityIndexOfHero (int lp_heroIndex);
void libCore_gf_CommandersActivateSkinForPlayerHero (bool lp_activate, string lp_pSkin, int lp_player);
void libCore_gf_CommandersActivateRandomSkinForPlayerHero (int lp_player);
void libCore_gf_SetNewHeroUnitOfCurrentHeroForPlayer (int lp_player, unit lp_newHeroUnit);
void libCore_gf_PrestigeAbilitiesAddAbilityForPlayerToSlot (string lp_prestigeAbility, int lp_player, int lp_slot);
void libCore_gf_PrestigeAbilitiesAddAbilityForPlayerToSlotGameStart (string lp_prestigeAbility, int lp_player, int lp_slot);
string libCore_gf_PrestigeAbilitiesAbilityPreset (string lp_abilityLink);
string libCore_gf_PrestigeAbilitiesAbilityLinkOfPlayerFromSlot (int lp_player, int lp_slot);
int libCore_gf_PrestigeAbilitiesDifferentSlot (int lp_slot);
int libCore_gf_PrestigeAbilitiesIndexOfAbility (string lp_preset);
string libCore_gf_PrestigeAbilitiesPrestigeFromIndex (int lp_abilityIndex);
int libCore_gf_TalentsTalentIndexFromTalentLink (string lp_talentLink);
int libCore_gf_TalentsTalentProfileIndexFromTalentProfileLink (string lp_talentProfileLink);
fixed libCore_gf_DataXPXPForUnit (unit lp_unit);
fixed libCore_gf_DataXPXPForHero (unit lp_deadUnit);
fixed libCore_gf_DataXPXPScalingForDefender (unit lp_defenderUnit);
fixed libCore_gf_DataXPXPScalingForMercenary (unit lp_mercenaryUnit);
int libCore_gf_RandomIntfrom3Intswithexclude (int lp_var1, int lp_var2, int lp_var3, int lp_excludeVar);
int libCore_gf_RandomVariablefrom2vars (int lp_var1, int lp_var2);
playergroup libCore_gf_AlliedPlayerGroupOfPlayer (int lp_player);
color libCore_gf_GetAllianceColorFromGameUIData (int lp_index);
fixed libCore_gf_GetWeaponDamageForUnit (unit lp_unit);
fixed libCore_gf_GetWeaponAttackSpeedForUnit (unit lp_unit);
string libCore_gf_GetTimeStamp (fixed lp_time);
bool libCore_gf_ToggleBoolean (bool lp_boolean);
void libCore_gf_CommandersAddHeroTalenttoPlayer (int lp_player, int lp_talentTier, int lp_talentColumn);
int libCore_gf_CommandersGetHeroIndexOfUnitType (string lp_heroUnitType);
int libCore_gf_CommandersGetHeroIndexOfHeroLink (string lp_heroLink);
int libCore_gf_CommandersGetHeroIndexOfUnit (unit lp_hero);
int libCore_gf_CommandersGetHeroIndexOfPlayerHero (int lp_player);
bool libCore_gf_CommandersIsHeroOrVehicleUnit (unit lp_unit);
unit libCore_gf_CommandersCurrentHeroOrVehicleOfPlayer (int lp_player);
bool libCore_gf_CheckValidatorOnUnit (string lp_validator, unit lp_sourceUnit, unit lp_targetUnit);
void libCore_gf_ResetRespawnTimerOfPlayerHero (int lp_player);
bool libCore_gf_AbilityCategory (string lp_ability, int lp_category);
void libCore_gf_CommandersRemoveBehaviorsByStackAlias (unit lp_unit, int lp_count, string lp_stackAlias, int lp_stackAliasPriority);
void libCore_gf_RegiserUnitDies (unit lp_unit, trigger lp_trigger);
int libCore_gf_DamageType (string lp_effect, int lp_player);
void libCore_gf_DialogSetPositionRelativeToUnitWithAnchor (int lp_Dialog, unit lp_Unit, string lp_Attachment, int lp_Anchor, int lp_OffsetX, int lp_OffsetY);
void libCore_gf_SetDialogItemAnimationState (int lp_dialogItem, playergroup lp_players, string lp_animationStateName, string lp_eventName);
string libCore_gf_ConvertIntegerToStringDoubleDigit (int lp_integer);
void libCore_gf_ChangeCollisionToTeamForPlayerHero (int lp_player);
void libCore_gf_ChangeCollisionForPlayerForUnitType (int lp_player, string lp_unitType, int lp_collisionType, int lp_operation);
playergroup libCore_gf_PlayerGroupExceptOfPlayer (playergroup lp_sourceGroup, int lp_exceptedPlayer);
bool libCore_gf_TalentsPlayerCanChooseTalentFromTierAndColumn (int lp_player, int lp_tier, int lp_column);
string libCore_gf_UnitAbilityHotkeyPath (string lp_unitType, string lp_abilityButton);
text libCore_gf_UnitAbilityHotkeyText (string lp_unitType, string lp_abilityButton);
void libCore_gf_UnitBehaviorRemoveChargeRegen (unit lp_inUnit, string lp_inBehavior, string lp_inCharge);
void libCore_gf_UnitAbilityRemoveChargeRegen (unit lp_inUnit, string lp_inAbil, string lp_inCharge);
void libCore_gf_UnitRemoveChargeRegen (unit lp_inUnit, string lp_inCharge);
fixed libCore_gf_WeaponDamageOfUnit (unit lp_unit);
string libCore_gf__UnitDataName (int lp_type, unit lp_unit, int lp_index);
void libCore_gf_StoreActorForUnit (unit lp_unit, int lp_index, actor lp_actor);
actor libCore_gf_ActorStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreTextTagForUnit (unit lp_unit, int lp_index, int lp_textTag);
int libCore_gf_TextTagStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePointForUnit (unit lp_unit, int lp_index, point lp_point);
point libCore_gf_PointStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreRegionForUnit (unit lp_unit, int lp_index, region lp_region);
region libCore_gf_RegionStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StorePingForUnit (unit lp_unit, int lp_index, int lp_ping);
int libCore_gf_PingStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreIntegerForUnit (unit lp_unit, int lp_index, int lp_value);
int libCore_gf_IntegerStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitForUnit (unit lp_unit, int lp_index, unit lp_value);
unit libCore_gf_UnitStoredForUnit (unit lp_unit, int lp_index);
void libCore_gf_StoreUnitGroupForUnit (unit lp_unit, int lp_index, unitgroup lp_value);
unitgroup libCore_gf_UnitGroupStoredForUnit (unit lp_unit, int lp_index);

// Trigger Declarations
trigger libCore_gt_InitializationMapInitizalization;
trigger libCore_gt_INITIALIZATION;
trigger libCore_gt_InitializeMapObjectsFromName;
trigger libCore_gt_PlayersInitialization;
trigger libCore_gt_CreateCapturePoints;
trigger libCore_gt_CampMapInit;
trigger libCore_gt_HideDefaultUIFrame;
trigger libCore_gt_SetVariablesMercenariesDefenders;
trigger libCore_gt_DEBUGTextTags;
trigger libCore_gt_DEBUGTurnModOnOff;
trigger libCore_gt_DEBUGResetCDofPlayer1;
trigger libCore_gt_DEBUGAdd10000PointstoPlayer1;
trigger libCore_gt_DEBUGResetTalentsforPlayer1;
trigger libCore_gt_DEBUGAddPlayertoAdminGroup;
trigger libCore_gt_DEBUGInvul;
trigger libCore_gt_DebugAddHeroicAbility;
trigger libCore_gt_GameStart;
trigger libCore_gt_TimerBGSExpires;
trigger libCore_gt_RunAnimationsandInitTowers;
trigger libCore_gt_RunAnimationsPreBuild;
trigger libCore_gt_DataInitializeAnnouncerVOData2;
trigger libCore_gt_BehaviorsQuestInitialization;
trigger libCore_gt_BehaviorsQuestIncreasedDestroyed;
trigger libCore_gt_BehaviorCategoriesInitialization;
trigger libCore_gt_BehaviorCategoriesAddController;
trigger libCore_gt_BehaviorCategoriesControllerBehaviorDestroy;
trigger libCore_gt_BehaviorCategoriesSlow;
trigger libCore_gt_BehaviorCategoriesStun;
trigger libCore_gt_BehaviorCategoriesBlind;
trigger libCore_gt_DataHeroesDeathTimes;
trigger libCore_gt_DataInitializeHeroes;
trigger libCore_gt_InitializeLevelData;
trigger libCore_gt_PrestigeAbilitiesCooldownController;
trigger libCore_gt_TalentsDataInitializePriceData;

// Library Initialization
void libCore_InitVariables ();

