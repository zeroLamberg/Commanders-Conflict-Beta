include "LibAIAI_h"
include "LibCore_h"

//--------------------------------------------------------------------------------------------------
// Library: UI
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int libUIUI_ge_TalentsHotkeyType_HotkeyMissing = 0;
const int libUIUI_ge_TalentsHotkeyType_HotkeyNormal = 1;
const int libUIUI_ge_TalentsHotkeyType_HotkeyUpgrade = 2;
const int libUIUI_ge_TalentsHotkeyType_HotkeyQuesting = 3;
const int libUIUI_ge_UITopPanelUnitStatusFrame_None = 0;
const int libUIUI_ge_UITopPanelUnitStatusFrame_Default = 1;
const int libUIUI_ge_UITopPanelUnitStatusFrame_NoResource = 2;
const int libUIUI_ge_UITopPanelUnitStatusFrame_SeparateShields = 3;
const int libUIUI_ge_UITopPanelUnitStatusFrame_YellowEnergy = 4;
const int libUIUI_ge_UITopPanelUnitStatusFrame_OrangeEnergy = 5;
const int libUIUI_ge_UITopPanelUnitStatusFrame_PinkEnergy = 6;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_None = 0;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_AttackDamage = 1;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_AttackSpeed = 2;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_AttackRange = 3;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_MoveSpeed = 4;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_PowerKinetic = 5;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_PowerEnergetic = 6;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_PowerStorm = 7;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_Dummy8 = 8;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_ArmorKinetic = 9;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_ArmorEnergetic = 10;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_ArmorStorm = 11;
const int libUIUI_ge_UIMyPropertyPanelPropertyType_Dummy12 = 12;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_Kills = 0;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_Assists = 1;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_Deaths = 2;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_SiegeDamage = 3;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_HeroDamage = 4;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_HealedandAbsorbed = 5;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_DamageTaken = 6;
const int libUIUI_ge_UIMyCustomLeaderBoardSortButton_XPContribution = 7;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_DefaultSorting = 0;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_Kills = 1;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_Assists = 2;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_Deaths = 3;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_SiegeDamage = 4;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_HeroDamage = 5;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_HealedandAbsorbed = 6;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_DamageTaken = 7;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingSortingType_XPContribution = 8;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingBestValue_AllyBestValue = 0;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingBestValue_AllyNotBestValue = 1;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingBestValue_EnemyBestValue = 2;
const int libUIUI_ge_UIMyCustomLeaderBoardSortingBestValue_EnemyNotBestValue = 3;
const int libUIUI_ge_UIMyCustomLeaderBoardContainerType_Stats = 0;
const int libUIUI_ge_UIMyCustomLeaderBoardContainerType_Talents = 1;
const int libUIUI_ge_UIMyCustomLeaderBoardContainerType_DeatD180Recap = 2;
const int libUIUI_ge_UIMyCustomLeaderBoardPrestigeAbilitiesSlot_Unselected = 0;
const int libUIUI_ge_UIMyCustomLeaderBoardPrestigeAbilitiesSlot_SelectedSlot1 = 1;
const int libUIUI_ge_UIMyCustomLeaderBoardPrestigeAbilitiesSlot_SelectedSlot2 = 2;
const int libUIUI_ge_UIKillLogPlayerType_TriggeringPlayer = 0;
const int libUIUI_ge_UIKillLogPlayerType_DeadPlayer = 1;
const int libUIUI_ge_UIKillLogLogType_Kill = 0;
const int libUIUI_ge_UIKillLogLogType_Quest = 1;
const int libUIUI_ge_UIFCTDirection_Left = 0;
const int libUIUI_ge_UIFCTDirection_Right = 1;
const int libUIUI_ge_UIFCTDirection_Middle = 2;
const int libUIUI_ge_UIFCTDirection_Vertical = 3;
const int libUIUI_ge_UIFCTDirection_Random = 4;
const int libUIUI_ge_FullscreenOverlayPriorities_Death = 0;
const int libUIUI_ge_FullscreenOverlayPriorities_VoidPrison = 1;
const int libUIUI_ge_FullscreenOverlayPriorities_Invulnerable = 2;
const int libUIUI_ge_FullscreenOverlayPriorities_Stasis = 3;
const int libUIUI_ge_UIHeroConsoleUnitStatus_None = 0;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Default = 1;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Blinking = 2;
const int libUIUI_ge_UIHeroConsoleUnitStatus_NoEnergy = 3;
const int libUIUI_ge_UIHeroConsoleUnitStatus_NoEnergyNoShield = 4;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Orange = 5;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Pink = 6;
const int libUIUI_ge_UIHeroConsoleUnitStatus_Yellow = 7;
const int libUIUI_ge_HeroSelectionRoleNumber_None = 0;
const int libUIUI_ge_HeroSelectionRoleNumber_Warrior = 1;
const int libUIUI_ge_HeroSelectionRoleNumber_Support = 2;
const int libUIUI_ge_HeroSelectionRoleNumber_Specialist = 3;
const int libUIUI_ge_HeroSelectionRoleNumber_Assasin1 = 4;
const int libUIUI_ge_HeroSelectionRoleNumber_Assasin2 = 5;
const int libUIUI_ge_HSUICellState_None = 0;
const int libUIUI_ge_HSUICellState_Empty = 1;
const int libUIUI_ge_HSUICellState_Normal = 2;
const int libUIUI_ge_HSUICellState_SelectedByMe = 3;
const int libUIUI_ge_HSUICellState_SelectedByOther = 4;
const int libUIUI_ge_HSUICellState_LockedByMe = 5;
const int libUIUI_ge_HSUICellState_LockedByOther = 6;
const int libUIUI_ge_MapMechanicsRavenCourtModes_NoActivity = 0;
const int libUIUI_ge_MapMechanicsRavenCourtModes_TributeSpawning = 1;
const int libUIUI_ge_MapMechanicsRavenCourtModes_TributeSpawned = 2;
const int libUIUI_ge_MapMechanicsRavenCourtModes_Curse = 3;
const int libUIUI_ge_MapMechanicsBlackheartsBayModes_Doubloons = 0;
const int libUIUI_ge_MapMechanicsBlackheartsBayModes_Cannon = 1;
const int libUIUI_ge_MapMechanicsHauntedMinesModes_MinesTimer = 0;
const int libUIUI_ge_MapMechanicsHauntedMinesModes_Skulls = 1;
const int libUIUI_ge_MapMechanicsHauntedMinesModes_Golem = 2;
const int libUIUI_ge_MapMechanicsDragonShireModes_ShrineTimer = 0;
const int libUIUI_ge_MapMechanicsDragonShireModes_Shrines = 1;
const int libUIUI_ge_MapMechanicsDragonShireModes_Dragon = 2;
const int libUIUI_ge_MapMechanicsGardenOfTerrorModes_Day = 0;
const int libUIUI_ge_MapMechanicsGardenOfTerrorModes_Night = 1;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_Null = 0;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_Growing = 1;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_WaitToSummon = 2;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_ReadyToSummon = 3;
const int libUIUI_ge_MapMechanicsGardenOfTerrorGolemStatusText_Active = 4;
const int libUIUI_ge_MapMechanicsBattleForSlaynModes_Timer = 0;
const int libUIUI_ge_MapMechanicsBattleForSlaynModes_VoidThrashers = 1;
const int libUIUI_ge_UIPingPingTargetTypes_None = 0;
const int libUIUI_ge_UIPingPingTargetTypes_Hero = 1;
const int libUIUI_ge_UIPingPingTargetTypes_Town = 2;
const int libUIUI_ge_UIPingPingTargetTypes_Core = 3;
const int libUIUI_ge_UIPingPingTargetTypes_OgreCamp = 4;
const int libUIUI_ge_UIPingPingTargetTypes_CampHybridCamp = 5;
const int libUIUI_ge_UIPingPingTargetTypes_SuperCreep = 6;
const int libUIUI_ge_UIPingPingTargetTypes_WatchTower = 7;
const int libUIUI_ge_UIPingPingTargetTypes_GnollCamp = 8;
const int libUIUI_ge_UIPingPingTargetTypes_Lighthouse = 9;
const int libUIUI_ge_UIPingPingTargetTypes_DragonCamp = 10;
const int libUIUI_ge_UIPingPingTargetTypes_SiegeGiantCamp = 11;
const int libUIUI_ge_UIPingPingTargetTypes_DragonDragonKnight = 12;
const int libUIUI_ge_UIPingPingTargetTypes_DragonMoonShine = 13;
const int libUIUI_ge_UIPingPingTargetTypes_DragonSunShine = 14;
const int libUIUI_ge_UIPingPingTargetTypes_RavenTribute = 15;
const int libUIUI_ge_UIPingPingTargetTypes_RavenTributeWarning = 16;
const int libUIUI_ge_UIPingPingTargetTypes_DocksDoubloonCamp = 17;
const int libUIUI_ge_UIPingPingTargetTypes_DocksGhostShipBeacon = 18;
const int libUIUI_ge_UIPingPingTargetTypes_DocksTreasureChest = 19;
const int libUIUI_ge_UIPingPingTargetTypes_UnderworldEntrance = 20;
const int libUIUI_ge_UIPingPingTargetTypes_UnderworldExit = 21;
const int libUIUI_ge_UIPingPingTargetTypes_UnderworldBoss = 22;
const int libUIUI_ge_UIPingPingTargetTypes_UnderworldSummonedBoss = 23;
const int libUIUI_ge_UITargetInfoPanelStatusBarTypes_Null = 0;
const int libUIUI_ge_UITargetInfoPanelStatusBarTypes_HealthAndMana = 1;
const int libUIUI_ge_UITargetInfoPanelStatusBarTypes_HealthOnly = 2;
const int libUIUI_ge_UITargetInfoPanelStatusBarTypes_TowerWithAmmo = 3;

// Constants
const int libUIUI_gv_uITopPanelUnitStatusFrameMaximum = 6;
const int libUIUI_gv_uIMyPropertyPanelUnitProperty = 12;
const int libUIUI_gv_uIMyCustomLeaderBoardsMaxSortingButtons = 8;
const fixed libUIUI_gv_uIKillLogDurationTimer = 6.0;
const int libUIUI_gv_uIKillLogMaxLogs = 8;
const int libUIUI_gv_uIKillLogMaxVisibleLogs = 7;
const int libUIUI_gv_uIKillLogDeathPlayersMax = 7;
const fixed libUIUI_gv_deathAnnouncement_VisibleDuration_C = 4.0;
const int libUIUI_gv_encouragement_MaxNumberOfStatCalloutsDisplayed_C = 4;
const int libUIUI_gv_encouragement_MaxNumberOfDeathTipsDisplayed_C = 1;
const fixed libUIUI_gv_floatingCombatTextNormalDuration = 0.5;
const fixed libUIUI_gv_floatingCombatTextMediumDuration = 0.75;
const fixed libUIUI_gv_floatingCombatTextHighDuration = 1.0;
const fixed libUIUI_gv_floatingCombatTextInsaneDuration = 1.25;
const fixed libUIUI_gv_floatingCombatTextFadeDuration = 0.25;
const fixed libUIUI_gv_floatingCombatText_PercentCutoff_C = 0.05;
const fixed libUIUI_gv_floatingCombatText_Damage_NormalThreshold = 0.1;
const fixed libUIUI_gv_floatingCombatText_Damage_HighThreshold = 0.33;
const fixed libUIUI_gv_fullscreenOverlaysSpecialOverlayHideTimerDuration_C = 1.0;
const fixed libUIUI_gv_fullscreenOverlaysDeathOverlayHideTimerDuration_C = 2.0;
const int libUIUI_gv_fullscreenOverlayMaxQueueSize_C = 10;
const int libUIUI_gv_uI_HealingFountainsHelpText_ArraySize_C = 31;
const fixed libUIUI_gv_uI_HealingFountainsHelpText_HeightOffset_C = 2.0;
const int libUIUI_gv_uIHeroConsoleUnitStatusMaximum = 7;
const int libUIUI_gv_heroSelectionNumberofRows = 5;
const int libUIUI_gv_heroSelectionNumberofCols = 8;
const int libUIUI_gv_uI_MaxHeroGroupStatusFrames = 10;
const int libUIUI_gv_uIUnitStatusFramesClassIconDefaultPoints = 3;
const int libUIUI_gv_mapMechanicsBlackheartsBayCannonballCount_C = 12;
const fixed libUIUI_gv_mapMechanicsBlackheartsBayChestsSpawnedFrameTimerDuration_C = 8.0;
const fixed libUIUI_gv_uI_PingCooldownTime_C = 0.75;

// Structures
struct libUIUI_gs_UITopPanel {
    int lv_mainDialog;
    int[libCore_gv_bALMaxTeams + 1] lv_team_LevelInfo;
    int[libCore_gv_bALMaxTeams + 1] lv_team_Level;
    int[libCore_gv_bALMaxTeams + 1] lv_team_ExpProgressBar;
    int[libCore_gv_bALMaxTeams + 1] lv_portraits_Panel;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_portraits_Frame;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_portraits_Image;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_portraits_DeathImage;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_portraits_DeathTimeLabel;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_portraits_HearthAnim;
    int[libCore_gv_bALMaxTeams + 1] lv_teamAdvantage_Label;
    int[libCore_gv_bALMaxTeams + 1] lv_teamAdvantage_Image;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_heroic_Panel;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_heroic_AbilityImage;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_heroic_CDLabel;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_heroic_ReadyImage;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1] lv_heroic_ProgressBar;
    int[libCore_gv_bALMaxTeams + 1] lv_statusFrameCore;
    int[libCore_gv_bALMaxTeams + 1] lv_statusFrameCoreInvulnerable;
    int[libCore_gv_bALMaxPlayersOnATeam + 1][libCore_gv_bALMaxTeams + 1][libUIUI_gv_uITopPanelUnitStatusFrameMaximum + 1] lv_statusFrameHealthAndMana;
    int lv_timer;
    bool[libCore_gv_bALMaxTeams + 1] lv_invulnerableFrameVisible;
};

struct libUIUI_gs_UIMyTalentsPanel {
    int lv_talentsPanel;
    int lv_talentButtonsPanel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentFrames;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentButtons;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentIcons;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentName;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentDescriptionLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_hotkeyFrame;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_hotkeyLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_tooltipNameLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_tooltipInfoLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_tooltipDescriptionLabel;
    int lv_tierSelectionPanel;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1] lv_tierSelectionButton;
    int lv_talentPointsLabel;
};

struct libUIUI_gs_UIMyPropertyPanel {
    int lv_mainPanel;
    int[libUIUI_gv_uIMyPropertyPanelUnitProperty + 1] lv_property_Tooltip;
    int lv_attackDamage;
    int lv_attackRange;
    int lv_attackSpeed;
    int lv_powerKinetic;
    int lv_powerEnergetic;
    int lv_powerStorm;
    int lv_moveSpeed;
    int lv_armorKinetic;
    int lv_armorEnergetic;
    int lv_armorStorm;
};

struct libUIUI_gs_UIMyCustomLeaderBoard {
    int lv_mainDialog;
    int lv_showDeathButton;
    int lv_showStatsButton;
    int lv_showTalentsButton;
    int lv_teamLabelKillsAlly;
    int lv_teamLabelKillsEnemy;
    int lv_teamLabelLevelAlly;
    int lv_teamLabelLevelEnemy;
    int lv_statsContainerFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_statsContainerFramePlayer;
    int lv_talentsContainerFrame;
    int lv_sortKills;
    int lv_sortAssists;
    int lv_sortDeaths;
    int lv_sortSiegeDamage;
    int lv_sortHeroDamage;
    int lv_sortHealedAndAbsorbed;
    int lv_sortDamageTaken;
    int lv_sortXPContribution;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameMainDialog;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFramePlayerName;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameHeroName;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameHeroIconImage;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsKillsLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsKillsFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsAssistsLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsAssistsFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsDeathsLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsDeathsFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsSiegeDamageLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsSiegeDamageFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsHeroDamageLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsHeroDamageFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsHealedandAbsorbedLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsHealedandAbsorbedFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsDamageTakenLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsDamageTakenFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsXPContributionLabel;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsXPContributionFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsGoldImage;
    int[libCore_gv_bALMaxPlayers + 1] lv_playerFrameStatsGoldLabel;
};

struct libUIUI_gs_UIMyCustomLeaderBoardTalents {
    int lv_talentsContainerFrame;
    int lv_heroNameLabel;
    int lv_talentPointsValueLabel;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_heroSelectionButtonTeamAlly;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_heroSelectionButtonTeamAllyHeroImage;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_heroSelectionButtonTeamEnemy;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_heroSelectionButtonTeamEnemyHeroImage;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1] lv_tierLabels;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentFrame;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentButton;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentButtonImage;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentButtonTooltip;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentQuestProgressBar;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentTooltipHotkeyFrame;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentTooltipHotkeyLabel;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentTooltipLabelName;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentTooltipLabelInfo;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentTooltipLabelDescription;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1][libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentTooltipLabelQuestProgression;
};

struct libUIUI_gs_UIMyCustomLeaderBoardPrestigeAbilities {
    int lv_button;
    int lv_image;
    int lv_cooldownLabel;
    int lv_cooldownProgressBar;
    int lv_tooltipDialogItem;
    int lv_tooltipName;
    int lv_tooltipInfo;
    int lv_tooltipDescription;
};

struct libUIUI_gs_UIKillLog {
    int lv_mainPanel;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_killLogPanel;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_killingPlayerFrame;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_killingPlayerPortraitImage;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_killingPlayerPortraitBorder;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_killingPlayerCutsceneFrame;
    int[libUIUI_gv_uIKillLogMaxLogs + 1][libUIUI_gv_uIKillLogDeathPlayersMax + 1] lv_deadPlayerFrame;
    int[libUIUI_gv_uIKillLogMaxLogs + 1][libUIUI_gv_uIKillLogDeathPlayersMax + 1] lv_deadPlayerStrikethroughFrame;
    int[libUIUI_gv_uIKillLogMaxLogs + 1][libUIUI_gv_uIKillLogDeathPlayersMax + 1] lv_deadPlayerPortraitImage;
    int[libUIUI_gv_uIKillLogMaxLogs + 1][libUIUI_gv_uIKillLogDeathPlayersMax + 1] lv_deadPlayerPortraitBorderColors;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_questFrame;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_questCompleteFrame;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_questTalentIconImage;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_questTimeLabel;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_vSImageFrame;
    int[libUIUI_gv_uIKillLogMaxLogs + 1] lv_vSImageIMAGEFrame;
};

struct libUIUI_gs_UIKillLogLogInfo {
    int lv_player;
    int lv_logType;
    timer lv_logTimer;
    int lv_combo;
};

struct libUIUI_gs_AnnUI {
    int lv_mainDialog;
    int lv_textLabel;
};

struct libUIUI_gs_UIDamageFlashUI {
    int lv_mainDialog;
    int lv_lightSplashImage;
    int lv_intenseSplashImage;
    int lv_lowHealthPersistentImage;
};

struct libUIUI_gs_DeathAnnouncementDeadHeroData {
    int lv_player;
    string lv_portraitImage;
    text lv_heroName;
    text lv_playerName;
};

struct libUIUI_gs_DeathAnnouncementPanel {
    int[libCore_gv_bALMaxTeams + 1] lv_teamPanels;
    int[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] lv_heroPanels;
    int[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] lv_heroPortraitImages;
    int[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] lv_heroNameLabels;
    int[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] lv_playerNameLabels;
};

struct libUIUI_gs_EncouragementStatToDisplay {
    int lv_statIndex;
    int lv_thresholdIndex;
    fixed lv_thresholdRatio;
};

struct libUIUI_gs_EncouragementPanel {
    int lv_mainDialog;
    int lv_closeButton;
    int[libUIUI_gv_encouragement_MaxNumberOfStatCalloutsDisplayed_C + 1] lv_statCalloutLabels;
    int[libUIUI_gv_encouragement_MaxNumberOfDeathTipsDisplayed_C + 1] lv_deathTipLabels;
};

struct libUIUI_gs_FullscreenOverlaysPanel {
    int lv_mainDialog;
    int lv_cCSplashImage;
    int lv_flashBangImage;
    int lv_abathurSymbioteOverlay;
    int lv_deathOverlay;
    int lv_specialOverlay;
};

struct libUIUI_gs_FullscreenOverlayPanelRework {
    int lv_mainDialog;
    int lv_overlayCutscene;
};

struct libUIUI_gs_FullscreenOverlayQueue {
    string[libUIUI_gv_fullscreenOverlayMaxQueueSize_C + 1] lv_cutscene;
    int lv_numberOfItemsInQueue;
    int[libUIUI_gv_fullscreenOverlayMaxQueueSize_C + 1] lv_priority;
    string[libUIUI_gv_fullscreenOverlayMaxQueueSize_C + 1] lv_behavior;
};

struct libUIUI_gs_GameOverSplash {
    int lv_mainPanel;
    int lv_victoryFrame;
    int lv_defeatFrame;
    int lv_defeatLabel;
    int lv_leaveButton;
};

struct libUIUI_gs_UIGameUIHandles {
    int lv_fullscreenUpperContainer;
    int lv_consoleUIContainer;
    int lv_helpButton;
    int lv_talentsButton;
    int lv_gameMenuButton;
    int lv_pingButton;
    int lv_minimapPanel;
    int lv_disableMinimapCommandsButton;
    int lv_enableMinimapCommandsButton;
};

struct libUIUI_gs_HealingFountainHelperTags {
    int lv_textTag;
    int lv_cooldown;
    unit lv_healingFountain;
};

struct libUIUI_gs_UIHeroConsole {
    int lv_heroConsolePanel;
    int lv_heroStatsFrame;
    int[libUIUI_gv_uIHeroConsoleUnitStatusMaximum + 1] lv_heroStatsUnitStatusFrame;
    int lv_heroStatsUnitStatusFrameOrange;
    int lv_heroStatsUnitStatusFrameBlinking;
    int lv_heroStatsUnitStatusFrameYellow;
    int lv_heroStatsUnitStatusFramePink;
    int lv_heroStatsUnitStatusFrameNoEnergy;
    int lv_heroStatsUnitStatusFrameNoEnergyNoShield;
    int lv_heroStatsHealthBar;
    int lv_heroStatsManaBar;
    int lv_gameUIPortrait;
    int lv_gameUICommandPanel;
    int lv_gameUICommandCardPanelFrame;
    int lv_gameUIInventoryPanel;
    int lv_buffDebuffPanel;
    int lv_buffBar;
    int lv_debuffBar;
    int lv_neutralBar;
};

struct libUIUI_gs_HeroConsoleUnitStatusBars {
    int lv_stunDeathBarParentFrame;
    int lv_stunDeathBarLeftBar;
    int lv_stunDeathBarRightBar;
    int lv_stunDeathBarIcon;
    int lv_stunDeathBarDescriptionLabel;
    int lv_stunDeathBarTimeLabel;
    int lv_castChannelBarParentFrame;
    int lv_behaviorChannelBarParentFrame;
    int lv_behaviorChannelBarDurationBar;
    int lv_behaviorChannelBarBehaviorLabel;
};

struct libUIUI_gs_HeroSelection {
    int lv_dialog;
    int lv_mainPanel;
    int lv_countdownLabel;
    int lv_finalCountdownFrame;
    int lv_titleLabel;
    int lv_selectedHeroPanel;
    int lv_selectedHeroName;
    int lv_selectedHeroRole;
    int lv_pickHeroPanel;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtons;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonImage;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBorder;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersEmpty;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMe1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMe2;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMe3;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByMeVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByAlly1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByAlly2;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersSelectedByAllyVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersThinking;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersThinkingVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedbyMe1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedbyMe2;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByMeVisible;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByAlly1;
    int[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByAlly2;
    bool[libCore_gv_bALMaxEnginePlayerCount + 1][libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] lv_heroButtonBordersLockedByAllyVisible;
    int lv_teamPanel;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroFrame;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroImage;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroRole;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroRoleBG;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroEmpty;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroBorder;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroLocked;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroLockedAnimation;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroSelectedAlly;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroThinking;
    int[libCore_gv_bALMaxEnginePlayerCount + 1][libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamPanelRowPlayer;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroPlayerName;
    int[libCore_gv_bALMaxPlayersOnATeam + 1] lv_teamHeroHeroName;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroContainerFrame;
    int[libCore_gv_bALMaxPlayers + 1] lv_heroCutsceneFrame;
    int lv_abilitiesButton;
    int lv_talentsButton;
    int lv_brawlButton;
    int lv_lockButton;
    int lv_debugCrazyBtn;
    int lv_debugRerollBtn;
    int lv_abilitiesPanel;
    int lv_abilitiesPanelCloseButton;
    int lv_abilitiesPanelHeroContainerFrame;
    int lv_abilitiesPanelUniverseIconImage;
    int lv_abilitiesPanelNameLabel;
    int lv_abilitiesPanelInfoLabel;
    int lv_abilitiesPanelAbilitiesTilelist;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItem;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemIconImage;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemNameLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemDescriptionSimpleLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemHotkeyFrame;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemHotkeyLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemTooltipFrame;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemTooltipNameLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemTooltipInfoLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero2 + 1] lv_abilitiesPanelBasicAbilItemTooltipDescriptionLabel;
    int lv_abilitiesPanelTraitAbilItem;
    int lv_abilitiesPanelTraitAbilItemIconImage;
    int lv_abilitiesPanelTraitAbilItemNameLabel;
    int lv_abilitiesPanelTraitAbilItemDescriptionSimpleLabel;
    int lv_abilitiesPanelTraitAbilItemHotkeyFrame;
    int lv_abilitiesPanelTraitAbilItemHotkeyLabel;
    int lv_abilitiesPanelTraitAbilItemTooltipFrame;
    int lv_abilitiesPanelTraitAbilItemTooltipNameLabel;
    int lv_abilitiesPanelTraitAbilItemTooltipInfoLabel;
    int lv_abilitiesPanelTraitAbilItemTooltipDescriptionLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItem;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemIconImage;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemNameLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemDescriptionSimpleLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemHotkeyFrame;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemHotkeyLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemTooltipFrame;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemTooltipNameLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemTooltipInfoLabel;
    int[libCore_gv_dataHeroesNumberOfPassiveAbilitiesPerHero3 + 1] lv_abilitiesPanelHeroicAbilItemTooltipDescriptionLabel;
    int lv_abiltiyFrame;
    int lv_talentsPanel;
    int lv_talentsPanelCloseButton;
    int lv_talentsPanelHeroContainerFrame;
    int lv_talentsPanelUniverseIconImage;
    int lv_talentsPanelNameLabel;
    int lv_talentsPanelInfoLabel;
    int[libCore_gv_dataHeroesMaxTalentsTiers + 1] lv_talentsPanelTierButton;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTalentButton;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTalentButtonIconImage;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTalentButtonHotkeyFrame;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTalentButtonHotkeyLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTalentButtonPriceLabel22222222222222222222222222222222;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTalentButtonNameLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTalentButtonDescriptionSimpleLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTooltipFrame;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTooltipNameLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTooltipInfoLabel;
    int[libCore_gv_dataHeroesMaxTalentsperTier + 1] lv_talentsPanelTooltipDescriptionLabel;
};

struct libUIUI_gs_PvEUIDirectivePanel {
    int lv_mainPanel;
    int lv_directiveTextFrame;
    int lv_directiveTitleLabel;
    int lv_directiveDescriptionLabel;
    int lv_mainPanelSmall;
    int lv_directiveTextFrameSmall;
    int lv_directiveTitleLabelSmall;
    int lv_directiveDescriptionLabelSmall;
};

struct libUIUI_gs_HeroSelectionSetting {
    timer lv_countdownTimer;
    bool[libCore_gv_bALMaxPlayers + 1] lv_lockedIn;
    int[libCore_gv_bALMaxPlayers + 1] lv_selectedHeroRow;
    int[libCore_gv_bALMaxPlayers + 1] lv_selectedHeroCol;
    int[libCore_gv_bALMaxPlayers + 1] lv_lockedHeroRow;
    int[libCore_gv_bALMaxPlayers + 1] lv_lockedHeroCol;
    bool lv_countDownEmdWarning;
    bool lv_finalCountDownStarted;
    int[libCore_gv_bALMaxPlayers + 1] lv_talentTierPressedButton;
    bool[libCore_gv_bALMaxPlayers + 1] lv_heroAbilitiesButtonToggled;
    bool[libCore_gv_bALMaxPlayers + 1] lv_heroTalentsButtonToggled;
    bool[libCore_gv_bALMaxPlayers + 1] lv_heroInfoButtonToggled;
};

struct libUIUI_gs_UIHeroStatusFrame {
    int lv_playerNameLabel;
    int lv_heroNameLabel;
    int lv_botDifficultyLabel;
    int lv_botStatusLabel;
    int lv_mapMechanicFrame;
    int lv_mapMechanicIcon;
    int lv_mapMechanicCount;
};

struct libUIUI_gs_UIHeroTrackerArrows {
    int lv_unitCount;
    unit[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_unit;
    int lv_mainPanel;
    int[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_offscreenUnit;
    int[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_arrow;
    int[libUIUI_gv_uI_MaxHeroGroupStatusFrames + 1] lv_portraitImage;
};

struct libUIUI_gs_JCIInfo {
    int lv_mainPanel;
    int lv_campTimerLabel;
    int lv_campEliteLabel;
    int lv_campTitleLabel;
    int lv_playerNameLabel;
    int lv_campDescriptionLabel;
    int lv_debugLabel;
    unit lv_bannerUnit;
    unit lv_bannerHolder;
};

struct libUIUI_gs_MapMechanicsPanel {
    int lv_mainPanel;
    int lv_ravenCourtPanel;
    int lv_ravenCourtTributeSpawnFrame;
    int lv_ravenCourtTributeSpawnInfoLabel;
    int lv_ravenCourtTributeSpawnTimerLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_ravenCourtTeamTributeFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_ravenCourtTeamTributeCounterLabel;
    int lv_ravenCourtCurseFrame;
    int lv_ravenCourtCurseInfoLabel;
    int lv_ravenCourtCurseTimerLabel;
    int lv_blackheartsBayPanel;
    int lv_blackheartsBayChestSpawnFrame;
    int lv_blackheartsBayDoubloonModeFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_blackheartsBayDoubloonCounterLabel;
    int lv_blackheartsBayCannonModeFrame;
    int lv_blackheartsBayCannonRemainingCannonballsLabel;
    int[libUIUI_gv_mapMechanicsBlackheartsBayCannonballCount_C + 1] lv_blackheartsBayCannonCannonballImages;
    int[libCore_gv_bALMaxTeams + 1] lv_blackheartsBayCannonShotCounterLabel;
    int lv_hauntedMinesPanel;
    int lv_hauntedMinesSkullModeFrame;
    int lv_hauntedMinesSkullModeRemainingSkullsLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_hauntedMinesSkullModeSkullCounterLabel;
    int lv_hauntedMinesMineTimerModeFrame;
    int lv_hauntedMinesMineTimerLabel;
    int lv_hauntedMinesGolemModeFrame;
    int lv_hauntedMinesAllyGolemHealthUnitStatus;
    int lv_hauntedMinesEnemyGolemHealthUnitStatus;
    int lv_hauntedMinesAllyGolemModeSkullCounterLabel;
    int lv_hauntedMinesEnemyGolemModeSkullCounterLabel;
    int lv_dragonShirePanel;
    int lv_dragonShireShrineTimerModeFrame;
    int lv_dragonShireShrineTimerLabel;
    int lv_dragonShireShrineModeFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireMoonShrineDisabledImage;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireMoonShrineEnabledImage;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireStarShrineDisabledImage;
    int[libCore_gv_bALMaxTeams + 1] lv_dragonShireStarShrineEnabledImage;
    int lv_dragonShireDragonModeFrame;
    int lv_dragonShireDragonInfoLabel;
    int lv_dragonShireDragonTimerLabel;
    int lv_dragonShireDragonHealthUnitStatus;
    int lv_dragonShireDragonHealthLabel;
    int lv_gardenOfTerrorPanel;
    int lv_gardenOfTerrorSeedsFrame;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameSeedCounterLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameStatusLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameStatusLabelFlashGold;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameStatusLabelFlashRed;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameCountdownLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameCountdownLabelGold;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameCountdownLabelRed;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameBlueSeedImage;
    int[libCore_gv_bALMaxTeams + 1] lv_gardenOfTerrorSeedsFrameRedSeedImage;
    int lv_gardenOfTerrorTimeOfDayFrame;
    int lv_gardenOfTerrorTimeOfDayCountdownLabel;
    int lv_gardenOfTerrorGolemFrame;
    int lv_gardenOfTerrorGolemFrameAllyGolemHealthUnitStatus;
    int lv_gardenOfTerrorGolemFrameEnemyGolemHealthUnitStatus;
    int lv_gardenOfTerrorGolemFrameAllyGolemStatusLabel;
    int lv_gardenOfTerrorGolemFrameEnemyGolemStatusLabel;
    int lv_gardenOfTerrorGolemFrameAllyGolemTimerLabel;
    int lv_gardenOfTerrorGolemFrameEnemyGolemTimerLabel;
    int lv_battleForSlaynPanel;
    int lv_battleForSlaynSpawnTimerModeFrame;
    int lv_battleForSlaynSpawnTimerLabel;
    int lv_battleForSlaynGolemModeFrame;
    int lv_battleForSlaynAllyGolemHealthUnitStatus;
    int lv_battleForSlaynAllyGolemHealthUnitStatusHealthLabel;
    int lv_battleForSlaynEnemyGolemHealthUnitStatus;
    int lv_battleForSlaynEnemyGolemHealthUnitStatusHealthLabel;
};

struct libUIUI_gs_UINotificationDisplay {
    int lv_mainPanel;
    int lv_flashFrame;
};

struct libUIUI_gs_UITargetInfoPanel {
    int lv_mainPanel;
    int lv_unitName;
    int lv_playerName;
    int lv_level;
    int lv_portraitImage;
    int lv_unitTargetFrame;
    int lv_mapMechanicIcon;
    int lv_mapMechanicLabel;
    int lv_descriptionLabel;
    int lv_cursedBuildingIcon;
    int lv_healthAndManaUnitStatusStatusFrame;
    int lv_healthOnlyUnitStatusStatusFrame;
    int lv_towerWithAmmoUnitStatusStatusFrame;
};

struct libUIUI_gs_TeamLevelPanel {
    int lv_mainDialog;
    int[libCore_gv_bALMaxTeams + 1] lv_levelLabels;
    int[libCore_gv_bALMaxTeams + 1] lv_xPBarUnitStatusFrames;
    int[libCore_gv_bALMaxTeams + 1] lv_xPBarUnitStatusBars;
};

struct libUIUI_gs_TeamStatusPanel {
    int lv_mainPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_coreHealthBarFrames;
    int lv_topChevron;
    int lv_topChevronEmpty;
    int[libCore_gv_bALMaxTeams + 1] lv_teamColorBar;
    int lv_mapMechanicMainPanel;
    int lv_mapMechanicImage;
    int lv_mapMechanicImageTooltipFrame;
    int lv_mapMechanicLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicTeamPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicTeamLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicTeamLabelTooltipFrame;
    int[libCore_gv_bALMaxTeams + 1][3] lv_mapMechanicTeamImages;
    int lv_mapMechanicActivePanel;
    int lv_mapMechanicActiveImage;
    int lv_mapMechanicActiveImageTooltipFrame;
    int lv_mapMechanicActiveLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamPanel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamSubLabel;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamImage;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamImageBG;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamHPBar;
    int[libCore_gv_bALMaxTeams + 1] lv_mapMechanicActiveTeamHPBarLabel;
};

// Variable Declarations
color libUIUI_gv_allyTeamColor;
color libUIUI_gv_enemyTeamColor;
libUIUI_gs_UITopPanel libUIUI_gv_uITopPanel;
string[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uITopPanelHeroicAbilityCooldownLink;
bool libUIUI_gv_uITopPanelCoreHealthFrameIsVisible;
fixed[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIMyTalentsPanelLastHighlightTiersTime;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyTalentsPanelPlayerViewingQuickTalents;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyTalentsPanelPlayerViewingQuickTalentsTier;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyTalentsPanelPlayerViewingQuickTalentsTierCtrlTab;
libUIUI_gs_UIMyTalentsPanel libUIUI_gv_uIMyTalentsPanel;
int libUIUI_gv_uIMyTalentsPanelNumberofViewingQuickTalentsPlayers;
libUIUI_gs_UIMyPropertyPanel libUIUI_gv_uIMyPropertyPanel;
int libUIUI_gv_uIMyPropertyPanelHeroStatsPlayers;
int libUIUI_gv_uiMyPropertyPanelPropertyType;
libUIUI_gs_UIMyCustomLeaderBoard libUIUI_gv_uIMyCustomLeaderBoard;
int libUIUI_gv_uIMyCustomLeaderBoardSortButton;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyCustomLeaderBoardPlayerWatchingStats;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyCustomLeaderBoardPlayerWatchingTalents;
bool[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyCustomLeaderBoardPlayerWatchingDeathRecap;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyCustomLeaderBoardSortingPlayerCurrentSort;
fixed[libCore_gv_bALMaxTeams + 1][libUIUI_gv_uIMyCustomLeaderBoardsMaxSortingButtons + 1][libCore_gv_bALMaxTeams + 1] libUIUI_gv_uIMyCustomLeaderBoardSortingBestValueOfSort;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIMyCustomLeaderBoardTalentsPlayerMonitoringTalentsOfPlayer;
libUIUI_gs_UIMyCustomLeaderBoardTalents libUIUI_gv_uIMyCustomLeaderBoardTalents;
libUIUI_gs_UIMyCustomLeaderBoardPrestigeAbilities[libCore_gv_dataHeroesMaxPrestigeAbilities + 1] libUIUI_gv_uIMyCustomLeaderBoardPrestigeAbilities;
int libUIUI_gv_uIMyCustomLeaderBoardPrestigeAbilitiesTooltip;
int[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_uIKillLogPlayerKILLINGPosition;
int[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIKillLogPlayerQUESTPosition;
libUIUI_gs_UIKillLog libUIUI_gv_uIKillLog;
libUIUI_gs_UIKillLogLogInfo[libUIUI_gv_uIKillLogMaxLogs + 1] libUIUI_gv_uIKillLogLogInfo;
libUIUI_gs_AnnUI libUIUI_gv_annUI;
libUIUI_gs_UIDamageFlashUI libUIUI_gv_uIDamageFlashUI;
fixed libUIUI_gv_uIDamageFlashLowHPThreshold;
timer[libCore_gv_bALMaxEnginePlayerCount + 1] libUIUI_gv_deathAnnouncement_AnnouncementVisibleTimers;
libUIUI_gs_DeathAnnouncementDeadHeroData[libCore_gv_bALMaxTeams + 1][libCore_gv_bALMaxPlayersOnATeam + 1] libUIUI_gv_deathAnnouncement_DeadHeroData;
libUIUI_gs_DeathAnnouncementPanel libUIUI_gv_deathAnnouncement_Panel;
libUIUI_gs_EncouragementPanel libUIUI_gv_encouragement_Panel;
timer[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_fullscreenOverlaysSpecialOverlayHideTimer;
timer[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_fullscreenOverlaysDeathOverlayHideTimer;
libUIUI_gs_FullscreenOverlaysPanel libUIUI_gv_fullscreenOverlaysPanel;
libUIUI_gs_FullscreenOverlayPanelRework libUIUI_gv_fullscreenOverlaysPanelRework;
libUIUI_gs_FullscreenOverlayQueue[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_fullscreenOverlayQueue;
libUIUI_gs_GameOverSplash libUIUI_gv_gameOverSplash;
libUIUI_gs_UIGameUIHandles libUIUI_gv_uIGameUIHandles;
bool libUIUI_gv_uIGameUIVisibility;
libUIUI_gs_HealingFountainHelperTags[libCore_gv_bALMaxPlayers + 1][libUIUI_gv_uI_HealingFountainsHelpText_ArraySize_C + 1] libUIUI_gv_uIHealingFountainsHelpText;
bool[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHealingFountainsHelpTextHasFountainBeenUsed;
bool[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHealingFountainsHelpTextTextShowing;
bool[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHealingFountainsHelpTextCooldownShowing;
libUIUI_gs_UIHeroConsole libUIUI_gv_uIHeroConsole;
libUIUI_gs_HeroConsoleUnitStatusBars libUIUI_gv_heroConsoleUnitStatusBars;
bool[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_heroConsoleUnitStatusBars_PlayerIsCasting;
unit[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_heroConsoleUnitStatusBars_CurrentUnitForPlayer;
string[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_heroConsoleUnitStatusBars_StunDeathBarCurrentBehaviorForPlayer;
string[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_heroConsoleUnitStatusBars_BehaviorChannelBarCurrentBehaviorForPlayer;
string[libUIUI_gv_heroSelectionNumberofRows + 1][libUIUI_gv_heroSelectionNumberofCols + 1] libUIUI_gv_heroSelectionCurateHeroSelections;
libUIUI_gs_HeroSelection libUIUI_gv_heroSelection;
libUIUI_gs_PvEUIDirectivePanel libUIUI_gv_pvEUIDirectivePanel;
libUIUI_gs_HeroSelectionSetting libUIUI_gv_heroSelectionSetting;
libUIUI_gs_UIHeroStatusFrame[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uIHeroStatusFrames;
libUIUI_gs_UIHeroTrackerArrows libUIUI_gv_uIHeroTrackerArrows;
libUIUI_gs_JCIInfo[libAIAI_gv_defMaxCamps + 1] libUIUI_gv_jCIInfo;
libUIUI_gs_MapMechanicsPanel libUIUI_gv_mapMechanicsPanel;
timer libUIUI_gv_mapMechanicsBlackheartsBayChestsSpawnedFrameTimer;
int libUIUI_gv_mapMechanicsBlackheartsBayCurrentMode;
int[libCore_gv_bALMaxTeams + 1] libUIUI_gv_mapMechanicsGardenOfTerrorLastSeedFrameStatus;
bool[libCore_gv_bALMaxTeams + 1] libUIUI_gv_mapMechanicsGardenOfTerrorGolemSummonPossible;
int[libCore_gv_bALMaxTeams + 1] libUIUI_gv_mapMechanicsGardenOfTerrorSeedStatusTextFlashLevel;
libUIUI_gs_UINotificationDisplay libUIUI_gv_uINotificationDisplay;
libUIUI_gs_UITargetInfoPanel libUIUI_gv_uITargetInfoPanel;
unit[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uITargetInfoPanelCurrentTargetForPlayer;
int[libCore_gv_bALMaxPlayers + 1] libUIUI_gv_uITargetInfoPanelCurretTargetStatusBarType;
bool libUIUI_gv_uITargetInfoPanelEnabled;
libUIUI_gs_TeamLevelPanel libUIUI_gv_teamLevel_Panel;
libUIUI_gs_TeamStatusPanel libUIUI_gv_teamStatusPanel;

// Function Declarations
void libUIUI_gf_TalentsSetDialogItemTalentHotkeyColorTypeForPlayer (int lp_hotkeyDialogItem, int lp_hotkeyType, int lp_player);
void libUIUI_gf_TalentsSetDialogItemTalentHotkeyTypeForPlayer (int lp_hotkeyType, int lp_hotkeyDialogItem, int lp_player);
void libUIUI_gf_UISetUpTalentsPrice ();
void libUIUI_gf_UITopPanelSetUpPlayerHero (int lp_player);
void libUIUI_gf_UITopPanelShowHidePlayerHeroUnitStatusFrame (bool lp_showHide, int lp_player);
void libUIUI_gf_UITopPanelDeathTimerStartForPlayer (int lp_player);
void libUIUI_gf_UITopPanelCoreActionTrigger ();
void libUIUI_gf_UITopPanelShowHideCoreInvulnerable (bool lp_showHide, int lp_team);
void libUIUI_gf_UITopPanelShowHideCoreHealthFrame (bool lp_showHide);
void libUIUI_gf_UITopPanelSetCoreLifeTo0 (int lp_team);
int libUIUI_gf_UIMyTalentsPanelCalculateWheelNextTalentsTier (int lp_currentTier);
void libUIUI_gf_UIMyTalentsPanelTierButtonPressedbyPlayer (int lp_player, int lp_buttonTier);
void libUIUI_gf_UIMyTalentsPanelSetQuickTalentsTierforPlayer (int lp_player, int lp_tier);
void libUIUI_gf_UIMyTalentsPanelShowHideQuickTalentsPanelforPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIPropertyFramePanelTooltipSetup ();
text libUIUI_gf_UIMyPropertyPanelGetStatText (int lp_propertyType, unit lp_unit);
void libUIUI_gf_UIMyPropertyPanelUpdateStatsofUnitforPlayer (unit lp_monitoredUnit, int lp_player);
void libUIUI_gf_UIMyCustomLeaderBoardSetUpPlayeronLeaderBoard (int lp_player);
bool libUIUI_gf_UIMyCustomLeaderBoardAnyPlayerWatchingLeaderBoard ();
bool libUIUI_gf_UIMyCustomLeaderBoardAnyPlayerWatchingStats ();
bool libUIUI_gf_UIMyCustomLeaderBoardAnyPlayerWatchingTalents ();
bool libUIUI_gf_UIMyCustomLeaderBoardPlayerWatchingLeaderBoard (int lp_player);
bool libUIUI_gf_UIMyCustomLeaderBoardPlayerWatchingStats (int lp_player);
bool libUIUI_gf_UIMyCustomLeaderBoardPlayerWatchingTalents (int lp_player);
void libUIUI_gf_UIMyCustomLeaderBoardChangeWatchingContainerForPlayer (int lp_containerType, int lp_player);
void libUIUI_gf_UIMyCustomLeaderBoardSortingChangeState (int lp_player, int lp_sortingType);
void libUIUI_gf_UIMyCustomLeaderBoardSortingSetDefaultState (int lp_triggeringPlayer);
void libUIUI_gf_UIMyCustomLeaderBoardSortingSetNonDefaultState (int lp_triggeringPlayer, int lp_sortingType);
void libUIUI_gf_UIMyCustomLeaderBoardSortingDoSorting (int lp_player);
void libUIUI_gf_UIMyCustomLeaderBoardSortingMoveSortedPlayerToSlot (int lp_triggeringPlayer, int lp_slotIndex, int lp_sortedPlayer);
void libUIUI_gf_UIMyCustomLeaderBoardSortingChangeButtonAvailability (int lp_player, int lp_sortingType);
void libUIUI_gf_UIMyCustomLeaderBoardSortingChangeBestValueTypeOfFrameForPlayer (int lp_bestValueType, int lp_dialogItem, int lp_triggeringPlayer);
void libUIUI_gf_UIMyCustomLeaderBoardSortingCalculateBestSortingPlayerForBothTeams ();
void libUIUI_gf_UIMyCustomLeaderBoardSortingUpdateBestValueOfSortedPlayer (int lp_dialogItem, int lp_sortingType, int lp_triggeringPlayer, int lp_sortedPlayer);
void libUIUI_gf_UIMyCustomLeaderBoardTalentsUpdateTalentsBoardforPlayer (int lp_triggeringPlayer);
void libUIUI_gf_UIMyCustomLeaderBoardTalentsSelectDeselectTalentUIForPlayer (int lp_player, bool lp_selectDeselect, int lp_talentTier, int lp_talentColumn);
void libUIUI_gf_UIMyCustomLeaderBoardTalentsPlayerClicksOnTalentHeroIconSelectionDialogItem (int lp_triggeringPlayer, int lp_dialogItem);
void libUIUI_gf_UIMyCustomLeaderBoardTalentsSetUpPlayerHeroNameForPlayer (int lp_triggeringPlayer, int lp_targetPlayer);
void libUIUI_gf_UIMyCustomLeaderBoardTalentsSetUpPlayerHeroImageOfPlayer (int lp_triggeringPlayer);
void libUIUI_gf_UIMyCustomLeaderBoardTalentsSetUpTalentsOfPlayerForPlayer (int lp_triggeringPlayer, int lp_targetPlayer);
void libUIUI_gf_UIMuCustomLeaderBoardPrestigeAbilitiesInitialize (int lp_parentDialogItem);
void libUIUI_gf_UIMyCustomLeaderBoardPrestigeAbilitiesSetButtonSelectedUnselectedForPlayer (int lp_prestigeButtonIndex, int lp_selectedButtonSlotType, int lp_player);
void libUIUI_gf_UIMyCustomLeaderBoardPrestigeAbilitiesSetCooldownForButtonForPlayer (int lp_player, int lp_buttonIndex, fixed lp_cooldown);
void libUIUI_gf_UIMyCustomLeaderBoardPrestigeAbilitiesChangeAbilityForPlayer (int lp_player, int lp_pressedButtonIndex, int lp_pressedButtonAssignToSlot);
void libUIUI_gf_UIKillLogSetPortraitsBorderColors (int lp_player, int lp_logNumber, int lp_type);
void libUIUI_gf_UIKillLogQuestComplete (int lp_questPlayer, text lp_timeLabel, string lp_talentImage);
void libUIUI_gf_addkill (int lp_killingPlayer, unit lp_deadUnit);
void libUIUI_gf_addquest (int lp_sourcePlayer, string lp_questbehavior);
int libUIUI_gf_getfreeorexistkilllog (int lp_player);
int libUIUI_gf_UIKillLogGetKilllogofPlayer (int lp_player, int lp_type);
int libUIUI_gf_UIKillLogGetFreeKilllogforPlayer (int lp_player);
bool libUIUI_gf_UIKillLogPlayerHasLogbyType (int lp_player, int lp_type);
void libUIUI_gf_UIKillLogFreeKillLog3D182D0BED187D182D0BED18FD185D0BED187D183D181D0B4D0B5D0BBD0B0D182D18CD0BAD0B0D0BAD183D0B1D0BBD0B8D0B7D0B7D0BED0B2 (int lp_killLogNumbertoRemove, bool lp_removeByTimeexp);
int libUIUI_gf_ReturnKilllogwithlowtimer ();
string libUIUI_gf_UIKillLogGetPortraitOfPlayer (int lp_player);
void libUIUI_gf_UICombatFloatingElementsApplyDirection (int lp_frame, int lp_direction);
void libUIUI_gf_UICombatFloatingElementsApplyAnimation (int lp_textFrame, string lp_style, playergroup lp_displayPlayers, string lp_animationSpeed);
int libUIUI_gf_UICombatFloatingElementsCreateTagAndReturnDialogItemForPlayer (unit lp_displayUnit, text lp_displayText, string lp_style, int lp_direction, int lp_displayPlayer, int lp_yOffset, string lp_animationSpeed);
int libUIUI_gf_UICombatFloatingElementsCreateTagAndReturnDialogItemForPlayerGroup (unit lp_displayUnit, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayerGroup, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextatUnitForPlayerGroupThread (unit lp_displayUnit, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextatPointForPlayerGroup (point lp_displayPoint, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UICombatFloatingElementsCreateTextatPointForPlayerGroupThread (point lp_displayPoint, text lp_displayText, string lp_style, int lp_direction, playergroup lp_displayPlayers, int lp_yOffset, string lp_animationSpeed);
void libUIUI_gf_UISetDialogItemToSelectedOrObserved (int lp_dialogItem);
void libUIUI_gf_UIShowHideStormGameUIAndWorldForPlayer2 (bool lp_showHide, int lp_player);
void libUIUI_gf_UIShowHideStormGameUIAndWorldForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIDamageFlashStartLowHPSoundAndScreenEffects (int lp_player);
void libUIUI_gf_UIDamageFlashStopLowHPSoundAndScreenEffects (int lp_player);
void libUIUI_gf_UILowHPSetSoundChannelsForLowHealth (int lp_player);
void libUIUI_gf_UILowHPSetSoundChannelsForSilence (int lp_player);
void libUIUI_gf_UILowHPSetSoundChannelsForNormal (int lp_player);
int libUIUI_gf_DeathAnnouncementPanelGetNextFreeSlotForTeam (int lp_team);
void libUIUI_gf_DeathAnnouncementPanelRegisterPlayer (int lp_player);
void libUIUI_gf_DeathAnnouncementPanelUnregisterPlayer (int lp_player);
void libUIUI_gf_EncouragementShowHidePanelForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIFloatingCombatTextCreateTextTag (int lp_displayPlayer, fixed lp_duration, text lp_text, unit lp_targetUnit, fixed lp_heightOffset, fixed lp_horizontalOffset, int lp_numberType);
void libUIUI_gf_UIFloatingCombatTextCreateTextTag2 (int lp_displayPlayer, fixed lp_duration, text lp_text, unit lp_targetUnit, fixed lp_heightOffset, fixed lp_horizontalOffset, string lp_numberType);
void libUIUI_gf_UIFloatingCombatTextXP (int lp_displayPlayer, unit lp_target, text lp_amount);
void libUIUI_gf_UIFloatingCombatTextGlobalXP (int lp_displayPlayer, text lp_amount);
void libUIUI_gf_FullscreenOverlaysShowHideDeathOverlay (bool lp_showHide, int lp_player);
void libUIUI_gf_FullscreenOverlaysStopSpecialOverlay (int lp_player);
void libUIUI_gf_FullscreenOverlaysShowSpecialOverlay (string lp_cutscene, int lp_player);
void libUIUI_gf_FullscreenOverlaysCreateCCEffectFlashForPlayer (int lp_player, fixed lp_cCDuration);
void libUIUI_gf_FullscreenOverlayAddItemForPlayer (int lp_player, int lp_priority, string lp_cutscene, string lp_behavior);
void libUIUI_gf_FullscreenOverlayInsertItemIntoQueueForPlayer (int lp_player, int lp_priority, int lp_desiredInsertPosition, string lp_cutscene, string lp_behavior);
void libUIUI_gf_FullscreenOverlayRemoveItemFromQueueForPlayer (int lp_player, string lp_cutscene, string lp_behavior);
void libUIUI_gf_FullscreenOverlayStopandClearCutsceneQueueForPlayer (int lp_player);
void libUIUI_gf_FullscreenOverlayPlayCutscene (int lp_player, string lp_cutscene);
void libUIUI_gf_GameOverSplashDisplayForAllPlayers (int lp_winningTeam);
void libUIUI_gf_GameOverSplashShowHideForAllPlayers (bool lp_showHide, int lp_winningTeam);
void libUIUI_gf_UIGameUIToggleMinimapCommandsForPlayer (int lp_player);
void libUIUI_gf_UIGameUIChangeModeMinimapCommandsForPlayer (int lp_player);
void libUIUI_gf_UIHealingFountainsHelpTextCreateTextTagsForTeam (int lp_team);
void libUIUI_gf_UIHealingFountainsHelpTextShowHideForPlayer (int lp_player, bool lp_showHide);
void libUIUI_gf_UIHeroConsoleShowHideForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroConsoleShowHideUnitStatusFrameForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroConsoleShowHideUnitStatusFrameForPlayer2 (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroConsoleSetUpForPlayer (int lp_player, unit lp_unit);
void libUIUI_gf_UIHeroConsoleSetUnitStatusForPlayer (int lp_unitStatus, int lp_player);
void libUIUI_gf_HeroConsoleUnitStatusBarsUpdateStunDeathBar (string lp_newBehavior, unit lp_heroUnit);
void libUIUI_gf_HeroConsoleUnitStatusBarsSetUnitForBars (unit lp_unit, int lp_player);
void libUIUI_gf_HeroConsoleUnitStatusBarsUpdateForPlayer (int lp_player);
void libUIUI_gf_HSEnableDisableHeroButtonForPlayerGroup (bool lp_enableDisable, int lp_row, int lp_column, playergroup lp_playerGroup, bool lp_desaturated);
void libUIUI_gf_HeroSelectionSelectHeroForPlayer (int lp_player, int lp_heroRow, int lp_heroCol);
int libUIUI_gf_HeroSelectionSelectRandomHeroForPlayer (int lp_player);
bool libUIUI_gf_HeroSelectionHeroSelectedByTeam (int lp_heroIndex, int lp_team);
bool libUIUI_gf_HSUIGoodToLockIn (int lp_player);
void libUIUI_gf_lockunlockherochoise (int lp_player, bool lp_lockUnlock);
bool libUIUI_gf_HSUIAllPlayersLockedIn ();
void libUIUI_gf_HSUIUpdateHeroButtons ();
int libUIUI_gf_HSUIGetCellState (int lp_viewer, int lp_row, int lp_col, int lp_team);
void libUIUI_gf_HSUIUpdateTeamPanel ();
string libUIUI_gf_HSUIGetHeroRoleIcon (int lp_row, int lp_col);
void libUIUI_gf_HSUIUpdateAbilitiesPanelforPlayer (int lp_player);
void libUIUI_gf_HSUIUpdateTalentsTierForPlayer (int lp_player, int lp_tier);
void libUIUI_gf_HSUIShowHeroSelectionUI ();
void libUIUI_gf_HSUIShowCalloutsDuringHeroSelectionCountdown (timer lp_timer);
void libUIUI_gf_UIUnitStatusFramesShowUnitNameLabelForUnit (unit lp_unit);
void libUIUI_gf_UIUnitStatusFramesHookupUnitStatusFramesForPlayer (int lp_player);
void libUIUI_gf_UIUnitStatusFramesShowHideBotLabel (int lp_player, bool lp_showHide);
void libUIUI_gf_UIHeroTrackerArrowShowHideForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_UIHeroTrackerArrowShowHideHeroUnitForPlayer (bool lp_showHide, int lp_player, unit lp_unit);
void libUIUI_gf_UIHeroTrackerArrowHookupTrackerArrowsForPlayer (int lp_player);
text libUIUI_gf_JCICampDiff (int lp_campNumber);
void libUIUI_gf_JCIInit (int lp_campNumber);
void libUIUI_gf_JCIChangeOwner (int lp_player, int lp_campNumber);
void libUIUI_gf_MapMechanicsRavenCourtShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsRavenCourtSetModeForTeam (int lp_mode, int lp_teamThatWonTheCurse);
void libUIUI_gf_MapMechanicsRavenCourtSetTributeCountForTeam (int lp_count, int lp_team);
void libUIUI_gf_MapMechanicsRavenCourtSetRemainingCurseTimeForTeam (int lp_remainingSeconds, int lp_team);
void libUIUI_gf_MapMechanicsRavenCourtSetRemainingTributeSpawnTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsBlackheartsBayShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsBlackheartsBaySetMode (int lp_mode);
void libUIUI_gf_MapMechanicsBlackheartsBayShowChestsSpawnedFrame ();
void libUIUI_gf_MapMechanicsBlackheartsBayShowCannonballForTeam (int lp_team);
void libUIUI_gf_MapMechanicsBlackheartsBaySetDoubloonCountForTeam (int lp_count, int lp_maxCount, int lp_team);
void libUIUI_gf_MapMechanicsBlackheartsBaySetShotCountForTeam (int lp_count, int lp_team);
void libUIUI_gf_MapMechanicsHauntedMinesShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsHauntedMinesSetMode (int lp_mode);
void libUIUI_gf_MapMechanicsHauntedMinesSetRemainingMinesWarningTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsHauntedMinesSetSkullCountForTeam (int lp_count, int lp_team);
void libUIUI_gf_MapMechanicsHauntedMinesSetSkullsRemaining (int lp_count);
void libUIUI_gf_MapMechanicsHauntedMinesSetUpGolemForTeam (unit lp_golemUnit, int lp_skullCount, int lp_team);
void libUIUI_gf_MapMechanicsHauntedMinesSetUpGolemForObserver (unit lp_golemUnitTeamBlue, unit lp_golemUnitTeamRed, int lp_skullCountTeamBlue, int lp_skullCountTeamRed);
void libUIUI_gf_MapMechanicsDragonShireShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsDragonShireSetMode (int lp_mode);
void libUIUI_gf_MapMechanicsDragonShireSetRemainingShrineWarningTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsDragonShireSetStarShrineOwner (int lp_team);
void libUIUI_gf_MapMechanicsDragonShireSetMoonShrineOwner (int lp_team);
void libUIUI_gf_MapMechanicsDragonShireSetRemainingDragonTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsDragonShireSetUpDragonForTeam (unit lp_dragonUnit, int lp_team);
void libUIUI_gf_MapMechanicsGardenOfTerrorInit (int lp_parentPanel);
void libUIUI_gf_MapMechanicsGardenOfTerrorShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsGardenOfTerrorShowHideNightWarning (bool lp_showHide);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetNightWarningTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemSummonPossibleForTeam (int lp_team, bool lp_summonPossible);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetSeedCountForTeam (text lp_countText, int lp_team, bool lp_golemSummonPossible);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetSeedFrameImageForTeam (int lp_team, bool lp_golemSummonPossible);
void libUIUI_gf_MapMechanicsGardenOfTerrorShowHideGolemFrame (bool lp_showHide);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetUpGolemStatusBarForTeam (unit lp_golemUnit, int lp_team);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemRemainingTimeForTeam (int lp_team, int lp_remainingTime);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemGrowTimeForTeam (int lp_team, int lp_remainingTime);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetGolemStatusTextForTeam (int lp_team, int lp_status);
void libUIUI_gf_MapMechanicsGardenOfTerrorSetSeedFrameStatusTextForTeam (int lp_team, int lp_status);
void libUIUI_gf_MapMechanicsGardenOfTerrorFlashSeedFrameStatusText (int lp_team, bool lp_flash, int lp_level);
void libUIUI_gf_MapMechanicsBattleForSlaynInit (int lp_parentPanel);
void libUIUI_gf_MapMechanicsBattleForSlaynShowHidePanel (bool lp_showHide);
void libUIUI_gf_MapMechanicsBattleForSlaynSetMode (int lp_mode);
void libUIUI_gf_MapMechanicsBattleForSlaynSetRemainingMinesWarningTime (int lp_remainingSeconds);
void libUIUI_gf_MapMechanicsBattleForSlaynSetUpThrasherForTeam (unit lp_golemUnit, int lp_team);
void libUIUI_gf_MapMechanicsBattleForSlaynSetUpThrasherForObserver (unit lp_golemUnitTeamBlue, unit lp_golemUnitTeamRed);
void libUIUI_gf_MapMechanicsBattleForSlaynHideVoidThrasherStatusBar (int lp_ownerofVoidThrasher);
int libUIUI_gf_UIPingDeterminePingTargetType (unit lp_unit);
unit libUIUI_gf_UIPingGetSpecialPingTargetInRangeOfPoint (point lp_point, bool lp_pingFromMinimap, int lp_pingingPlayer);
void libUIUI_gf_UIPingPlayerPingsUnit (int lp_pingingPlayer, unit lp_targetUnit, playergroup lp_pingPlayerGroup);
void libUIUI_gf_UIPingPlayerUsesAssistMePing (int lp_player, point lp_location);
void libUIUI_gf_PingPlayerUsesDefendPing (unit lp_pingedUnit, int lp_player, point lp_location);
void libUIUI_gf_UIPingPlayerUsesDangerPing (int lp_player, point lp_location, unit lp_targetUnit);
void libUIUI_gf_UIPingPlayerUsesOnMyWayPing (int lp_player, point lp_location);
void libUIUI_gf_UIPingPlayerUsesRetreatPing (int lp_player, point lp_location);
void libUIUI_gf_UITargetInfoPanelSetUpMapMechanicInfo (string lp_icon, text lp_tooltip);
void libUIUI_gf_UITargetInfoPanelUpdateMapMechanicTextForPlayer (text lp_text, int lp_player);
void libUIUI_gf_UITargetInfoPanelSetTargetForPlayer (unit lp_target, int lp_player);
void libUIUI_gf_UITargetInfoPanelClearTargetForPlayer (int lp_player);
void libUIUI_gf_UITargetInfoPanelUpdateForPlayer (int lp_player);
void libUIUI_gf_UITargetInfoPanelEnableDisable (bool lp_enableDisable);
void libUIUI_gf_TeamLevelHookUpXPBarUnitForTeam (int lp_team, unit lp_unit);
void libUIUI_gf_TeamLevelUpdateTeamsLevelLabel (int lp_team, int lp_level);
void libUIUI_gf_TeamLevelPanelShowHideForPlayer (bool lp_showHide, int lp_player);
void libUIUI_gf_InitObjectiveUI (text lp_title, text lp_tip, string lp_image);
void libUIUI_gf_ShowHideObjectiveUI (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUIImage (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUILabel (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUITeamPanel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUITeamLabel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveUITeamImage (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ActivateDeactivateTopChevron (bool lp_activateDeactivate, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveUITip (text lp_title, text lp_tip, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveUIImage (string lp_image, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveUILabel (text lp_value);
void libUIUI_gf_SetObjectiveUITeamLabels (text lp_team1Value, text lp_team2Value);
void libUIUI_gf_SetObjectiveUITeamImages (int lp_team, int lp_index, string lp_image, playergroup lp_players);
void libUIUI_gf_SetObjectiveUITeamTooltips (text lp_allyTooltip, text lp_enemyTooltip, text lp_team1ObserverTooltip, text lp_team2ObserverTooltip);
void libUIUI_gf_ShowHideObjectiveActiveUI (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUILabel (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUIImage (bool lp_showHide, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamPanel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamImage (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamLabel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamSubLabel (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_ShowHideObjectiveActiveUITeamHPBar (bool lp_showHide, int lp_team, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUIImage (string lp_image, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUILabel (text lp_label, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITip (text lp_title, text lp_tip, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamImage (int lp_team, string lp_image, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamLabel (int lp_team, text lp_value, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamSubLabel (int lp_team, text lp_value, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamHPBarUnit (int lp_team, unit lp_unit, playergroup lp_forPlayers);
void libUIUI_gf_SetObjectiveActiveUITeamHPBarText (int lp_team, text lp_value, playergroup lp_forPlayers);

// Trigger Declarations
trigger libUIUI_gt_UITopPanelInitialize;
trigger libUIUI_gt_UITopPanelBGSTimer;
trigger libUIUI_gt_UITopPanelGameTimer;
trigger libUIUI_gt_UITopPanelHeroicAbilityStateChanged;
trigger libUIUI_gt_UITopPanelUpdateHeroicAbilityCDs;
trigger libUIUI_gt_UIMyTalentsPanelHighlightTiers;
trigger libUIUI_gt_UIMyTalentsPanelInitialize;
trigger libUIUI_gt_UIMyTalentsPanelPlayerViewingQuickTalentsUpdate;
trigger libUIUI_gt_UIPropertyFramePanelInitialize;
trigger libUIUI_gt_UIMyPropertyPanelPeriodicUpdate;
trigger libUIUI_gt_UIMyCustomLeaderBoardInitialize;
trigger libUIUI_gt_UIMyCustomLeaderBoardUpdateStats;
trigger libUIUI_gt_UIMyCustomLeaderBoardTalentsInitializeTalentsFrame;
trigger libUIUI_gt_UIMyCustomLeaderBoardTalentsUpdateTalents;
trigger libUIUI_gt_UIMyCustomLeaderBoardPrestigeAbilitiesSetUpAbilities;
trigger libUIUI_gt_Timer;
trigger libUIUI_gt_UIKillLogInitialization;
trigger libUIUI_gt_UIInitialization;
trigger libUIUI_gt_UIInitizalizationFastUI;
trigger libUIUI_gt_AnnUIInit;
trigger libUIUI_gt_UIInitializeDamageFlashUI;
trigger libUIUI_gt_UIDamageFlashTriggerDamageFlash;
trigger libUIUI_gt_UIDamageFlashLowHPSoundsLooper;
trigger libUIUI_gt_DeathAnnouncementPanelInitialize;
trigger libUIUI_gt_EncouragementPanelInitialize;
trigger libUIUI_gt_EncouragementPanelCloseButtonClicked;
trigger libUIUI_gt_UIFloatingCombatTextNewKineticDamage;
trigger libUIUI_gt_UIFloatingCombatTextNewKineticDamageBlocked;
trigger libUIUI_gt_UIFloatingCombatTextNewEnergeticDamage;
trigger libUIUI_gt_UIFloatingCombatTextNewEnergeticDamageBlocked;
trigger libUIUI_gt_UIFloatingCombatTextNewStormDamage;
trigger libUIUI_gt_UIFloatingCombatTextNewHeal;
trigger libUIUI_gt_FullscreenOverlaysInitialize;
trigger libUIUI_gt_FullscreenOverlaysDeathOverlayHideTimeExpires;
trigger libUIUI_gt_FullscreenOverlaysSpecialOverlayHideTimeExpires;
trigger libUIUI_gt_FullscreenOverlaysInitializeRework;
trigger libUIUI_gt_GameOverSplashInitialize;
trigger libUIUI_gt_UIInitializeGameUIHandles;
trigger libUIUI_gt_UIGameUIMinimapCommandsButtonClicked;
trigger libUIUI_gt_UIGodRayCreate;
trigger libUIUI_gt_UIGodRayDestroy;
trigger libUIUI_gt_UIGodRayDestroyOnDC;
trigger libUIUI_gt_UIInitializeHealingFountainsHelpText;
trigger libUIUI_gt_UIHealingFountainsHelpTextPlayerUsesHealingFountain;
trigger libUIUI_gt_UIHealingFountainsHelpTextTextDisplayController;
trigger libUIUI_gt_UIHealingFountainsHelpTextHealingFountainDies;
trigger libUIUI_gt_UIInitializeHeroConsole;
trigger libUIUI_gt_HeroConsoleUnitStatusBarsInitialize;
trigger libUIUI_gt_HeroConsoleUnitStatusBarsChannelBehaviorAdded;
trigger libUIUI_gt_HeroConsoleUnitStatusBarsUpdate;
trigger libUIUI_gt_DirectiveInit;
trigger libUIUI_gt_HeroSelectionUIInit;
trigger libUIUI_gt_HSButtonUsed;
trigger libUIUI_gt_HSUICountdownTimerExpires;
trigger libUIUI_gt_UIInitializeHeroTrackerArrow;
trigger libUIUI_gt_PathDisplayMoveCreate;
trigger libUIUI_gt_UIInputIngameButtonUsed;
trigger libUIUI_gt_InputPlayerClicksUnit;
trigger libUIUI_gt_CtrlDownShowSecondaryAbilities;
trigger libUIUI_gt_CtrlUpHideSecondaryAbilities;
trigger libUIUI_gt_TabShowLeaderBoard;
trigger libUIUI_gt_ControlDownShowQuickTalents;
trigger libUIUI_gt_ControlUpHideQuickTalents;
trigger libUIUI_gt_CtrlTabChangeQuickTalentsTier;
trigger libUIUI_gt_MapMechanicsPanelInitialize;
trigger libUIUI_gt_MapMechanicsPanelUpdate;
trigger libUIUI_gt_MapMechanicsBlackheartsBayChestsSpawnedFrameTimerExpires;
trigger libUIUI_gt_UIInitializeNotificationDisplay;
trigger libUIUI_gt_UIPingListenForPlayerPing;
trigger libUIUI_gt_UIInitializeTargetInfoPanel;
trigger libUIUI_gt_UITargetInfoPanelUpdate;
trigger libUIUI_gt_TeamLevelPanelInitialize;
trigger libUIUI_gt_TeamStatusPanelInitialize;
trigger libUIUI_gt_TeamStatusPanelUpdate;
trigger libUIUI_gt_UnitStatusSetProtectedColor;

// Library Initialization
void libUIUI_InitVariables ();

